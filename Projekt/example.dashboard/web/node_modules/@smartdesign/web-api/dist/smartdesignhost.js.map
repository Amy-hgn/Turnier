{"version":3,"file":"smartdesignhost.js","mappings":"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","sources":["webpack://smartdesign/webpack/universalModuleDefinition","webpack://smartdesign/./common/communicator.ts","webpack://smartdesign/./common/functionUtil.ts","webpack://smartdesign/./common/message.ts","webpack://smartdesign/./common/sdmessage.ts","webpack://smartdesign/./common/tunnel.ts","webpack://smartdesign/./host/smartdesign_host.ts","webpack://smartdesign/webpack/bootstrap","webpack://smartdesign/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smartdesign\"] = factory();\n\telse\n\t\troot[\"smartdesign\"] = factory();\n})(self, function() {\nreturn ","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { MessageStatus } from \"./message\";\nimport { SDMessage } from \"./sdmessage\";\nimport { StringKeyOf, ArgumentTypes, ReturnType, Awaited } from \"./type-utils\";\n\nexport class Communicator<REMOTE = any> {\n    constructor(\n        private targetOrigin: string,\n        private target: () => IEndpoint,\n        private source: () => IEndpoint,\n        private defaultTimeout: number = 10000\n    ) {}\n    private parseJSON(data) {\n        try {\n            return JSON.parse(data);\n        } catch (error) {\n            return undefined;\n        }\n    }\n    private unwrapMessage(eventData: unknown): SDMessage {\n        return this.parseJSON(eventData) as SDMessage;\n    }\n\n    private wrapMessage(message: SDMessage) {\n        return JSON.stringify(message);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    public expose(object: any, action: string): () => void {\n        const handler = (args: any) => {\n            return new Promise<any>((resolve, reject) => {\n                try {\n                    resolve(object[action](...args));\n                } catch (error) {\n                    reject(error);\n                }\n            });\n        };\n        const messageHandler = (event: MessageEvent) => {\n            if (event.source !== this.target()) {\n                return;\n            }\n\n            const message: SDMessage = this.unwrapMessage(event.data);\n            if (message) {\n                const args = message.params;\n                if (action === message.action) {\n                    handler(args)\n                        .then((payload) => {\n                            return new SDMessage(action, undefined, undefined, undefined, MessageStatus.OK, payload);\n                        })\n                        .catch((e) => {\n                            console.error(\"Remote method invocation failed.\", e);\n                            return new SDMessage(\n                                action,\n                                undefined,\n                                undefined,\n                                e instanceof Error ? e.message || \"ERROR\" : e,\n                                MessageStatus.ERROR_UNKNOWN,\n                                undefined\n                            );\n                        })\n                        .then((result) => {\n                            result.tag = message.tag;\n                            result.source = message.source;\n                            result.target = message.target;\n                            this.target().postMessage(this.wrapMessage(result), this.targetOrigin);\n                        });\n                }\n            }\n        };\n\n        this.source().addEventListener(\"message\", messageHandler, false);\n        return () => this.source().removeEventListener(\"message\", messageHandler);\n    }\n\n    public invoke<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>,\n        RETURNTYPE extends Awaited<ReturnType<REMOTE[METHOD]>> = Awaited<ReturnType<REMOTE[METHOD]>>\n    >(method: METHOD, ...args: ARGS): Promise<RETURNTYPE> {\n        let timeout = null;\n        const timeoutPromise: Promise<RETURNTYPE> = new Promise<RETURNTYPE>((resolve, reject) => {\n            timeout = setTimeout(() => {\n                reject(new Error(\"Remote method (\" + method + \") invocation failed: Timeout\"));\n            }, this.defaultTimeout);\n        });\n        const relaxed = this.invokeRelaxed(method, ...args);\n        relaxed.then(\n            () => clearTimeout(timeout),\n            () => clearTimeout(timeout)\n        );\n        return Promise.race([timeoutPromise, relaxed]) as Promise<RETURNTYPE>;\n    }\n\n    public invokeRelaxed<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>,\n        RETURNTYPE extends Awaited<ReturnType<REMOTE[METHOD]>> = Awaited<ReturnType<REMOTE[METHOD]>>\n    >(method: METHOD, ...args: ARGS): Promise<RETURNTYPE> {\n        const result = new Promise<RETURNTYPE>((resolve, reject) => {\n            const request = this.postInternal(method, ...args);\n            const handler = (event: MessageEvent) => {\n                if (event.source !== this.target()) {\n                    return;\n                }\n                const response: SDMessage = this.unwrapMessage(event.data);\n                if (response) {\n                    if (request.tag !== response.tag) {\n                        return;\n                    }\n                    this.source().removeEventListener(\"message\", handler);\n\n                    if (response.status !== MessageStatus.OK || response.error) {\n                        reject(new Error(response.error || response.payload));\n                    } else {\n                        resolve(response.payload);\n                    }\n                }\n            };\n            this.source().addEventListener(\"message\", handler, false);\n        });\n        return result;\n    }\n\n    private postInternal<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>\n    >(method: METHOD, ...args: ARGS): SDMessage {\n        const request = new SDMessage(method, args, undefined, undefined, undefined, undefined);\n        this.target().postMessage(this.wrapMessage(request), this.targetOrigin);\n        return request;\n    }\n\n    public post<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>\n    >(method: METHOD, ...args: ARGS): void {\n        this.postInternal(method, ...args);\n    }\n}\n\nexport interface IEndpoint {\n    postMessage(message: any, targetOrigin: string, transfer?: any[]): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n}\n","export const getMethods = (obj) => {\n    let props: string[] = [];\n    const isConstructor = (e) => \"constructor\" === e;\n    const isFunction = (e) => typeof obj[e] === \"function\";\n    const isNormalFunction = (e) => !isConstructor(e) && isFunction(e);\n\n    while ((obj = Object.getPrototypeOf(obj)) && obj !== Object.prototype) {\n        const allProps = Object.getOwnPropertyNames(obj);\n        const functions = allProps.filter((e) => isNormalFunction(e));\n        props = props.concat(functions);\n    }\n\n    return props.sort().filter((e, i, arr) => {\n        return e !== arr[i + 1];\n    });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* istanbul ignore file */\n\n/**\n * Base interface defining messaging contract.\n *\n * TODO: create contract validator\n */\nexport interface IMessageBase {\n    /**\n     * Auto-generated identifier used for message identification and as a correlation ID for request-response pairs.\n     */\n    tag: string;\n\n    /**\n     * Name of message subject (typically pub/sub topic or RPC method name)\n     */\n    action: string;\n\n    /**\n     * Optional parameter section, is typically populated in RPCs requests/responses.\n     */\n    params?: { [paramName: string]: any };\n\n    /**\n     * Payload (if any) of the message.\n     */\n    payload?: any;\n\n    /**\n     * Message metadata.\n     */\n    meta: IMeta;\n    error?: any;\n    status?: MessageStatus;\n}\n\nexport interface IMeta {\n    /**\n     * DEPRECATED.\n     * Set SDX message tiers. Will be replaced by message routing in v3.\n     */\n    tier: Tier;\n\n    /**\n     * Float version number for API contract versioning:\n     * - 1.0: SDX Messaging v1 (up to SDX Native Frames)\n     * - 2.0: SDX Messaging v2 (up to SDX versions <= 3.x.x)\n     * - 3.0: CAS Integration Library (from SDX v3, SDX SDK v3)\n     */\n    apiVersion: number;\n\n    /**\n     * Timestamp of message generation (UNIX-time with millis).\n     */\n    timestamp: number;\n\n    /**\n     * Emitter can classify message as a cacheable message for subscribers.\n     */\n    cache?: boolean;\n\n    /**\n     * Indicates a message is coming from a cache or is about a cached resource.\n     */\n    cached?: boolean;\n\n    /**\n     * A message with supplied patterns should invalidate other messages with matching action names.\n     * Array of string arrays defining patterns for action names joined by '*'\n     */\n    invalidates?: string[][];\n\n    /**\n     * WebSocket connection ID used by SDX Server.\n     */\n    connectionId?: string;\n\n    /**\n     * Timeout in milliseconds\n     */\n    timeout?: number;\n\n    [key: string]: any;\n}\n\n/**\n * DEPRECATED: set SDX message tiers. Will be replaced by message routing in v3.\n */\nexport enum Tier {\n    INTERAPP,\n    CONTAINER,\n    BROADCAST,\n}\n\n/**\n * Status values in MessageBase\n */\nexport enum MessageStatus {\n    /**\n     * No errors, code of success.\n     */\n    OK = 0,\n\n    /**\n     * Message targeted a party that was not ready, or action against an uninitialized party.\n     */\n    NOT_INITIALIZED = 1,\n\n    /**\n     * Authorization error.\n     */\n    NOT_AUTHORIZED = 2,\n\n    /**\n     * Action got invalidated (eg. object instance from cache, session, etc.)\n     */\n    INVALIDATED = 3,\n\n    /**\n     * Message targeted a party that is not available (eg. API proxy response for unavailable backend)\n     */\n    ERROR_NOT_AVAILABLE = 248,\n\n    /**\n     * Messaging (integration) host error\n     */\n    ERROR_HOST = 249,\n\n    /**\n     * No response from any party for the same message tag in given timeout (see Meta).\n     */\n    ERROR_TIMEOUT = 250,\n\n    /**\n     * Message is not applicable with given parameters. Typically used in RPC responses.\n     */\n    ERROR_INVALID_PARAMS = 251,\n\n    /**\n     * Message targeting RPC method does not exist. Typically used in RPC responses.\n     */\n    ERROR_NO_SUCH_METHOD = 252,\n\n    /**\n     * Internal error in service behind given action name.\n     */\n    ERROR_SERVICE = 253,\n\n    /**\n     * Message format and/or payload parse error.\n     */\n    ERROR_PARSE = 254,\n\n    /**\n     * Unknown error occurred during message exchange. See error property for details, if any.\n     */\n    ERROR_UNKNOWN = 255,\n}\n\nexport abstract class Message implements IMessageBase {\n    public tag: string;\n\n    constructor(\n        public action: string,\n        public params: any = {},\n        public meta: IMeta,\n        public error?: string,\n        public status?: number,\n        public payload: any = {}\n    ) {\n        this.tag = this.UUID();\n\n        this.meta = {\n            apiVersion: 2.0,\n            tier: Tier.INTERAPP,\n            timestamp: new Date().getTime(),\n        };\n    }\n\n    public setTier(tier: Tier) {\n        if (tier) {\n            this.meta.tier = tier;\n        }\n    }\n\n    private UUID(): string {\n        if (typeof window.crypto !== \"undefined\" && typeof window.crypto.getRandomValues !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            const buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            const S4 = (num: any) => {\n                let ret = num.toString(16);\n                while (ret.length < 4) {\n                    ret = \"0\" + ret;\n                }\n                return ret;\n            };\n            return (\n                S4(buf[0]) +\n                S4(buf[1]) +\n                \"-\" +\n                S4(buf[2]) +\n                \"-\" +\n                S4(buf[3]) +\n                \"-\" +\n                S4(buf[4]) +\n                \"-\" +\n                S4(buf[5]) +\n                S4(buf[6]) +\n                S4(buf[7])\n            );\n        } else {\n            const s4 = () => {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            };\n            return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n        }\n    }\n}\n","import { Message } from \"./message\";\n\nexport class SDMessage extends Message {\n    public source: string;\n    public target: string;\n}\n","export const createTunnel = (host = \"\", readyCallback: () => void): HTMLIFrameElement => {\n    const tunnel = document.createElement(\"iframe\");\n    tunnel.tabIndex = -1;\n    tunnel.style.width = \"0\";\n    tunnel.style.height = \"0\";\n    tunnel.style.margin = \"0\";\n    tunnel.style.padding = \"0\";\n    tunnel.style.border = \"none\";\n    tunnel.style.position = \"absolute\";\n    tunnel.style.zIndex = \"-1\";\n    tunnel.style.pointerEvents = \"none\";\n    if (host.lastIndexOf(\"/\") === host.length - 1) {\n        host = host.substring(0, host.length - 1);\n    }\n    tunnel.setAttribute(\"src\", host + \"/apps/content/api/tunnel.html\");\n    window.addEventListener(\"message\", (e) => {\n        if (e.data === \"ready\" && readyCallback) {\n            readyCallback();\n        }\n    });\n    return tunnel;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Communicator, IEndpoint } from \"../common/communicator\";\nexport * from \"../common/communicator\";\nimport { InitParameters } from \"../common/initParameters\";\nimport { createTunnel as createTunnelInternal } from \"../common/tunnel\";\nimport { SearchQuery, OpenSearchResponse } from \"../common/query\";\nimport { getMethods } from \"../common/functionUtil\";\nimport {\n    INavigationSelection,\n    ISingleSelection,\n    INavigationOptions,\n    BackNavigationMode,\n    IRecordNavigationOptions,\n} from \"../common/navigation\";\nimport { IDialogOptions } from \"../common/dialog\";\nimport { IOpenDialogResponse } from \"../common/dialogutils\";\nimport { LoadingIndicatorOptions } from \"../common/loadingindicator\";\nimport { Area, Coordinate, IFlyoutMenuItem, IMenuItem, IRadialMenuItem, RadialMenuOptions } from \"../common/overlay\";\nimport {\n    IMassDataResponse,\n    GroupResult,\n    ScriptedUngroupedAggregationResult,\n    ScriptedGroupedAggregationResult,\n} from \"../common/context\";\nimport { Field, FieldMetadata } from \"../common/field\";\nimport { ICommand, IGroup } from \"../common/command\";\nimport { AppSettingsScope, AppSettingsSetMode } from \"../common/settings\";\nexport { InitParameters } from \"../common/initParameters\";\n\nexport interface IHostAPI<T = any> {\n    navigate(intent: string, options?: INavigationOptions): void;\n    navigateWithRecord(objectType: string, gguid: string, intent?: string, options?: IRecordNavigationOptions): void;\n    navigateWithRecords(\n        objectType: string,\n        selection: INavigationSelection,\n        intent?: string,\n        options?: INavigationOptions\n    ): void;\n    navigateToDossier(\n        source: ISingleSelection,\n        selection?: ISingleSelection,\n        intent?: string,\n        navigateToDossier?: string[],\n        options?: INavigationOptions\n    ): void;\n    reload(): void;\n    navigateHome(): void;\n    navigateBack(): void;\n    urlChanged(url: string): void;\n    setBackwardNavigationMode(mode: BackNavigationMode): Promise<void>;\n\n    initApp(origin?: string): InitParameters<T> | Promise<InitParameters<T>>;\n    requestResize(width: number, height: number): void;\n    provideCaption(caption: string): void;\n    contributeCommand(command: IGroup | ICommand): void;\n    revokeCommand(id: string): void;\n\n    openSearch(objectType: string, query?: SearchQuery): Promise<OpenSearchResponse>;\n    openDialog(dialogOptions: IDialogOptions): Promise<IOpenDialogResponse>;\n    updateState(state: T): Promise<void>;\n\n    getAllAppSettings(appId: string, scope: AppSettingsScope): Promise<Record<string, unknown>>;\n    setAllAppSettings(\n        appId: string,\n        scope: AppSettingsScope,\n        mode: AppSettingsSetMode,\n        settings: Record<string, unknown>\n    ): Promise<void>;\n    getAppSettings(appId: string, scope: AppSettingsScope, propertyName: string): Promise<unknown>;\n    deleteAppSettings(appId: string, scope: AppSettingsScope, propertyName: string): Promise<void>;\n\n    showLoadingIndicator(options?: LoadingIndicatorOptions): void;\n    hideLoadingIndicator(): void;\n\n    openFlyoutMenu(items: IFlyoutMenuItem[], positionOrArea: Coordinate | Area): Promise<IMenuItem | null>;\n    openRadialMenu(\n        items: IRadialMenuItem[],\n        radialMenuOptions: RadialMenuOptions,\n        position: Coordinate\n    ): Promise<IRadialMenuItem | null>;\n\n    massDataOperationLoad(\n        contextItemName: string,\n        fieldNames: string[],\n        from: number,\n        pageSize: number,\n        where?: string\n    ): Promise<IMassDataResponse<unknown>>;\n    massDataOperationCount(contextItemName: string): Promise<number>;\n    massDataOperationSum(contextItemName: string, fieldName: string): Promise<number | string | undefined>;\n    massDataOperationMin(contextItemName: string, fieldName: string): Promise<number | string | undefined>;\n    massDataOperationMax(contextItemName: string, fieldName: string): Promise<number | string | undefined>;\n    massDataOperationAverage(contextItemName: string, fieldName: string): Promise<number | string | undefined>;\n\n    dependentDataObjectsOperationLoad(\n        contextItemName: string,\n        fieldNames: string[]\n    ): Promise<IMassDataResponse<unknown>>;\n\n    registerContextItemInvalidateInterest(contextItemName: string): Promise<void>;\n    unregisterContextItemInvalidateInterest(contextItemName: string): Promise<void>;\n\n    aggregationOperationGet(contextItemName: string): Promise<GroupResult<unknown, unknown>[]> | Promise<unknown>;\n    fieldAggregationGetMetadata(propertyName: string): Promise<FieldMetadata>;\n    scriptedAggregationGet(\n        propertyName: string\n    ): Promise<ScriptedGroupedAggregationResult<any> | ScriptedUngroupedAggregationResult<any>>;\n\n    getField(contextItemName: string, fieldName: string): Promise<Field<any>>;\n    getFields(contextItemName: string, ...fieldNames: string[]): Promise<Record<string, Field<any>>>;\n    updateField(contextItemName: string, field: Field<any>): Promise<void>;\n    updateFields(contextItemName: string, changes: Record<string, Field<any>>): Promise<void>;\n\n    getMetadata(objectTypeName: string): Promise<Record<string, FieldMetadata>>;\n\n    registerFieldInterest(contextItemName: string, fieldName: string): Promise<void>;\n    unregisterFieldInterest(contextItemName: string, fieldName: string): Promise<void>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace SmartDesign {\n    export type IAPI<T = any> = IHostAPI<T>;\n}\n\n/**\n * Creates a tunnel for cross tab communication.\n * The resulting iframe should be appended to the html document, and then it can be used as a parameter to [[connect]].\n * @param {string} host Url of the SmartDesign instance. e.g. https://mycompany.com/smartdesign or http://login.smartwe.de/SmartWe/\n * @param {VoidFunction} readyCallback Callback to execute after the tunnel is established\n * @return {HTMLIFrameElement} frame element to be used for the tunneling\n */\nexport const createTunnel = (host = \"\", readyCallback: () => void): HTMLIFrameElement => {\n    return createTunnelInternal(host, readyCallback);\n};\n\nexport const invokeMethod = (\n    domain: string,\n    target: () => IEndpoint,\n    source: () => IEndpoint,\n    method: string,\n    parameters?: any[]\n): Promise<any> => {\n    const communicator = new Communicator(domain, target, source);\n    return communicator.invoke(method, ...(parameters || []));\n};\n\nexport const expose = (\n    appDomain: string,\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    obj: any,\n    target: () => IEndpoint,\n    source: () => IEndpoint = () => window,\n    timeout = 10000\n): (() => void) => {\n    const handlers = getMethods(obj).map((method) => {\n        const communicator = createCommunicator(appDomain, target, source, timeout);\n        const messageHandlerRemover = communicator.expose(obj, method);\n        return messageHandlerRemover;\n    });\n    return () => handlers.forEach((item) => item());\n};\n\nexport const createCommunicator = <REMOTE = any>(\n    appDomain: string,\n    target: () => IEndpoint,\n    source: () => IEndpoint = () => window,\n    timeout = 10000\n): Communicator<REMOTE> => {\n    return new Communicator(appDomain, target, source, timeout);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(226);\n"],"names":["root","factory","exports","module","define","amd","self","message_1","require","sdmessage_1","Communicator","targetOrigin","target","source","defaultTimeout","this","prototype","parseJSON","data","JSON","parse","error","unwrapMessage","eventData","wrapMessage","message","stringify","expose","object","action","_this","messageHandler","event","args","params","Promise","resolve","reject","apply","__spreadArray","__read","handler","then","payload","SDMessage","undefined","MessageStatus","OK","catch","e","console","Error","ERROR_UNKNOWN","result","tag","postMessage","addEventListener","removeEventListener","invoke","method","_i","arguments","length","timeout","timeoutPromise","setTimeout","relaxed","invokeRelaxed","clearTimeout","race","request","postInternal","response","status","post","obj","props","isNormalFunction","isConstructor","isFunction","Object","getPrototypeOf","functions","getOwnPropertyNames","filter","concat","sort","i","arr","Tier","Message","meta","UUID","apiVersion","tier","INTERAPP","timestamp","Date","getTime","setTier","window","crypto","getRandomValues","buf","Uint16Array","S4","num","ret","toString","s4","Math","floor","random","substring","_super","__extends","host","readyCallback","tunnel","document","createElement","tabIndex","style","width","height","margin","padding","border","position","zIndex","pointerEvents","lastIndexOf","setAttribute","communicator_1","__exportStar","tunnel_1","functionUtil_1","createTunnel","domain","parameters","communicator","appDomain","handlers","getMethods","map","createCommunicator","forEach","item","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}