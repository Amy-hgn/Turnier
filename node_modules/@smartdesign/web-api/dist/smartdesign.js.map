{"version":3,"file":"smartdesign.js","mappings":"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","sources":["webpack://smartdesign/webpack/universalModuleDefinition","webpack://smartdesign/../../design-tokens/dist/tokens.esm.js","webpack://smartdesign/../../node_modules/.pnpm/whatwg-fetch@3.6.2/node_modules/whatwg-fetch/fetch.js","webpack://smartdesign/./app/smartdesign_app.ts","webpack://smartdesign/./app/smartdesign_url_change.ts","webpack://smartdesign/./common/command.ts","webpack://smartdesign/./common/commandregistry.ts","webpack://smartdesign/./common/communicator.ts","webpack://smartdesign/./common/dialog.ts","webpack://smartdesign/./common/dialogutils.ts","webpack://smartdesign/./common/functionUtil.ts","webpack://smartdesign/./common/message.ts","webpack://smartdesign/./common/navigation.ts","webpack://smartdesign/./common/overlay.ts","webpack://smartdesign/./common/runtimeContext.ts","webpack://smartdesign/./common/runtimeSettings.ts","webpack://smartdesign/./common/sdmessage.ts","webpack://smartdesign/./common/tunnel.ts","webpack://smartdesign/webpack/bootstrap","webpack://smartdesign/webpack/runtime/define property getters","webpack://smartdesign/webpack/runtime/hasOwnProperty shorthand","webpack://smartdesign/webpack/runtime/make namespace object","webpack://smartdesign/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smartdesign\"] = factory();\n\telse\n\t\troot[\"smartdesign\"] = factory();\n})(self, function() {\nreturn ","export default {\n  \"color-base-red-50\": \"#ffeeef\",\n  \"color-base-red-100\": \"#ffe2e5\",\n  \"color-base-red-150\": \"#ffccd2\",\n  \"color-base-red-200\": \"#ffb7bf\",\n  \"color-base-red-300\": \"#ff97a3\",\n  \"color-base-red-400\": \"#f96778\",\n  \"color-base-red-450\": \"#f14558\",\n  \"color-base-red-500\": \"#ea2138\",\n  \"color-base-red-600\": \"#e2001a\",\n  \"color-base-red-700\": \"#cc0017\",\n  \"color-base-red-800\": \"#b50015\",\n  \"color-base-red-900\": \"#9f0012\",\n  \"color-base-orange-50\": \"#fff5ef\",\n  \"color-base-orange-100\": \"#ffefe5\",\n  \"color-base-orange-150\": \"#ffe3d1\",\n  \"color-base-orange-200\": \"#ffd7be\",\n  \"color-base-orange-300\": \"#ffc19b\",\n  \"color-base-orange-400\": \"#ffa670\",\n  \"color-base-orange-450\": \"#ff9250\",\n  \"color-base-orange-500\": \"#ff7e30\",\n  \"color-base-orange-600\": \"#ff6b11\",\n  \"color-base-orange-700\": \"#e95f0c\",\n  \"color-base-orange-800\": \"#d65404\",\n  \"color-base-orange-900\": \"#bf4800\",\n  \"color-base-yellow-50\": \"#fffaeb\",\n  \"color-base-yellow-100\": \"#fff6de\",\n  \"color-base-yellow-150\": \"#fff0cc\",\n  \"color-base-yellow-200\": \"#ffeab6\",\n  \"color-base-yellow-300\": \"#ffe39d\",\n  \"color-base-yellow-400\": \"#ffd97b\",\n  \"color-base-yellow-450\": \"#ffcf58\",\n  \"color-base-yellow-500\": \"#ffc434\",\n  \"color-base-yellow-600\": \"#ffbb11\",\n  \"color-base-yellow-700\": \"#e9aa0c\",\n  \"color-base-yellow-800\": \"#d69a04\",\n  \"color-base-yellow-900\": \"#bf8800\",\n  \"color-base-green-50\": \"#f6faec\",\n  \"color-base-green-100\": \"#f0f7df\",\n  \"color-base-green-150\": \"#e8f2d0\",\n  \"color-base-green-200\": \"#deedbc\",\n  \"color-base-green-300\": \"#cee49c\",\n  \"color-base-green-400\": \"#bedb79\",\n  \"color-base-green-450\": \"#add154\",\n  \"color-base-green-500\": \"#9bc730\",\n  \"color-base-green-600\": \"#8abd0c\",\n  \"color-base-green-700\": \"#7baa0b\",\n  \"color-base-green-800\": \"#6e970a\",\n  \"color-base-green-900\": \"#618508\",\n  \"color-base-dark-green-50\": \"#eaf4ec\",\n  \"color-base-dark-green-100\": \"#dff2e3\",\n  \"color-base-dark-green-150\": \"#ccecd3\",\n  \"color-base-dark-green-200\": \"#b1dfbb\",\n  \"color-base-dark-green-300\": \"#93d3a2\",\n  \"color-base-dark-green-400\": \"#72c584\",\n  \"color-base-dark-green-450\": \"#4cb563\",\n  \"color-base-dark-green-500\": \"#26a642\",\n  \"color-base-dark-green-600\": \"#009621\",\n  \"color-base-dark-green-700\": \"#00871e\",\n  \"color-base-dark-green-800\": \"#00781a\",\n  \"color-base-dark-green-900\": \"#006917\",\n  \"color-base-cyan-50\": \"#e3f0f5\",\n  \"color-base-cyan-100\": \"#d5eff8\",\n  \"color-base-cyan-150\": \"#c2e8f3\",\n  \"color-base-cyan-200\": \"#aee0ef\",\n  \"color-base-cyan-300\": \"#92d4e7\",\n  \"color-base-cyan-400\": \"#70c7e0\",\n  \"color-base-cyan-450\": \"#43b4d6\",\n  \"color-base-cyan-500\": \"#19a3cb\",\n  \"color-base-cyan-600\": \"#0099c5\",\n  \"color-base-cyan-700\": \"#008ab2\",\n  \"color-base-cyan-800\": \"#007a9e\",\n  \"color-base-cyan-900\": \"#006b8a\",\n  \"color-base-blue-50\": \"#e7f1fa\",\n  \"color-base-blue-100\": \"#d6eeff\",\n  \"color-base-blue-150\": \"#c7e7ff\",\n  \"color-base-blue-200\": \"#b1deff\",\n  \"color-base-blue-300\": \"#8ecfff\",\n  \"color-base-blue-400\": \"#6ac0ff\",\n  \"color-base-blue-450\": \"#4ab2ff\",\n  \"color-base-blue-500\": \"#2ba4ff\",\n  \"color-base-blue-600\": \"#0d98ff\",\n  \"color-base-blue-700\": \"#0c88e6\",\n  \"color-base-blue-800\": \"#0a77ca\",\n  \"color-base-blue-900\": \"#0968af\",\n  \"color-base-dark-blue-50\": \"#e1ebf6\",\n  \"color-base-dark-blue-100\": \"#d3e6fa\",\n  \"color-base-dark-blue-150\": \"#b9d7f5\",\n  \"color-base-dark-blue-200\": \"#9bc6f2\",\n  \"color-base-dark-blue-300\": \"#77afe7\",\n  \"color-base-dark-blue-400\": \"#5198e0\",\n  \"color-base-dark-blue-450\": \"#3a85d1\",\n  \"color-base-dark-blue-500\": \"#2576c7\",\n  \"color-base-dark-blue-600\": \"#1467ba\",\n  \"color-base-dark-blue-700\": \"#125da8\",\n  \"color-base-dark-blue-800\": \"#105295\",\n  \"color-base-dark-blue-900\": \"#0e4883\",\n  \"color-base-pink-50\": \"#fce6f3\",\n  \"color-base-pink-100\": \"#fad5eb\",\n  \"color-base-pink-150\": \"#f7bbdd\",\n  \"color-base-pink-200\": \"#f2a1cf\",\n  \"color-base-pink-300\": \"#ec78ba\",\n  \"color-base-pink-400\": \"#e755a8\",\n  \"color-base-pink-450\": \"#d94397\",\n  \"color-base-pink-500\": \"#cc2f89\",\n  \"color-base-pink-600\": \"#c41579\",\n  \"color-base-pink-700\": \"#b4136e\",\n  \"color-base-pink-800\": \"#a01163\",\n  \"color-base-pink-900\": \"#8a0f55\",\n  \"color-base-purple-50\": \"#f4e2f6\",\n  \"color-base-purple-100\": \"#eccff0\",\n  \"color-base-purple-150\": \"#dab2e0\",\n  \"color-base-purple-200\": \"#c792cf\",\n  \"color-base-purple-300\": \"#ab66b4\",\n  \"color-base-purple-400\": \"#93459e\",\n  \"color-base-purple-450\": \"#823591\",\n  \"color-base-purple-500\": \"#772386\",\n  \"color-base-purple-600\": \"#6c127b\",\n  \"color-base-purple-700\": \"#5e106b\",\n  \"color-base-purple-800\": \"#530d5e\",\n  \"color-base-purple-900\": \"#450b4f\",\n  \"color-base-brown-50\": \"#f2eae4\",\n  \"color-base-brown-100\": \"#eadcd2\",\n  \"color-base-brown-150\": \"#d8c4b3\",\n  \"color-base-brown-200\": \"#bca38d\",\n  \"color-base-brown-300\": \"#a08165\",\n  \"color-base-brown-400\": \"#8b6747\",\n  \"color-base-brown-450\": \"#755438\",\n  \"color-base-brown-500\": \"#65472b\",\n  \"color-base-brown-600\": \"#593b20\",\n  \"color-base-brown-700\": \"#4f351d\",\n  \"color-base-brown-800\": \"#462f1b\",\n  \"color-base-brown-900\": \"#3f2915\",\n  \"color-base-grey-50\": \"#f9f9f9\",\n  \"color-base-grey-100\": \"#f3f3f3\",\n  \"color-base-grey-150\": \"#eeeeee\",\n  \"color-base-grey-200\": \"#e5e5e5\",\n  \"color-base-grey-300\": \"#d9d9d9\",\n  \"color-base-grey-400\": \"#cccccc\",\n  \"color-base-grey-450\": \"#bbbbbb\",\n  \"color-base-grey-500\": \"#aaaaaa\",\n  \"color-base-grey-600\": \"#999999\",\n  \"color-base-grey-700\": \"#777777\",\n  \"color-base-grey-800\": \"#666666\",\n  \"color-base-grey-900\": \"#555555\",\n  \"color-base-white\": \"#ffffff\",\n  \"color-base-black\": \"#111111\",\n  \"color-font-base\": \"#111111\",\n  \"color-font-secondary\": \"#555555\",\n  \"color-font-tertiary\": \"#999999\",\n  \"color-font-warn\": \"#555555\",\n  \"color-font-suggest\": \"#bf8800\",\n  \"color-font-error\": \"#cc0017\",\n  \"font-family-base\": \"\\\"Segoe UI\\\", Tahoma, Geneva, Verdana, sans-serif\",\n  \"size-font-tiny\": \"12px\",\n  \"size-font-small\": \"13px\",\n  \"size-font-medium\": \"16px\",\n  \"size-font-large\": \"20px\",\n  \"size-font-xl\": \"24px\",\n  \"size-font-xxl\": \"32px\",\n  \"size-font-xxxl\": \"48px\",\n  \"size-font-base\": \"16px\",\n  \"time-transition-short\": \"275ms\",\n  \"time-transition-base\": \"300ms\",\n  \"time-transition-long\": \"600ms\",\n  \"time-transition-xl\": \"1000ms\"\n}","var global =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  (typeof global !== 'undefined' && global)\n\nvar support = {\n  searchParams: 'URLSearchParams' in global,\n  iterable: 'Symbol' in global && 'iterator' in Symbol,\n  blob:\n    'FileReader' in global &&\n    'Blob' in global &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in global,\n  arrayBuffer: 'ArrayBuffer' in global\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this)\n        if (isConsumed) {\n          return isConsumed\n        }\n        if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function(header) {\n      return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n    })\n    .forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = options.statusText === undefined ? '' : '' + options.statusText\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = global.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && global.location.href ? global.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer &&\n        request.headers.get('Content-Type') &&\n        request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers)) {\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!global.fetch) {\n  global.fetch = fetch\n  global.Headers = Headers\n  global.Request = Request\n  global.Response = Response\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable valid-jsdoc */\nimport { IHostAPI } from \"../host/smartdesign_host\";\nimport { Communicator, IEndpoint } from \"../common/communicator\";\nimport { trackUrlChanges } from \"./smartdesign_url_change\";\nimport { createTunnel as createTunnelInternal } from \"../common/tunnel\";\nimport { InitParameters } from \"../common/initParameters\";\nimport { SearchQuery, OpenSearchResponse } from \"../common/query\";\nimport {\n    INavigationBuilder,\n    INavigationWithRecordBuilder,\n    INavigationWithRecordsBuilder,\n    INavigationWithDossierBuilder,\n    NavigationBuilder,\n    NavigationWithRecordBuilder,\n    NavigationWithRecordsBuilder,\n    NavigationWithDossierBuilder,\n    BackNavigationMode,\n    INavigator,\n    INavigationOptions,\n    INavigationSelection,\n    ISingleSelection,\n    IRecordNavigationOptions,\n} from \"../common/navigation\";\n\nexport {\n    INavigationBuilder,\n    INavigationWithRecordBuilder,\n    INavigationWithRecordsBuilder,\n    INavigationWithDossierBuilder,\n} from \"../common/navigation\";\n\nimport \"whatwg-fetch\";\nimport { IDisposable } from \"../common/disposable\";\nimport { ActivationMessage, IActivationChangeHandler } from \"../common/activation\";\nimport { getMethods } from \"../common/functionUtil\";\n\nimport { Field, SingleValueField, MultiValueField, StringTreeSuggestField, FieldMetadata } from \"../common/field\";\nexport * from \"../common/field\";\n\nimport { BasicState } from \"../common/basicstate\";\nexport { BasicState } from \"../common/basicstate\";\n\nimport { LocaleInformation } from \"../common/localeInformation\";\n// eslint-disable-next-line camelcase\nimport { IDialogOptions, DialogButtonPreset_YES_NO, IDialogResult, DialogStyle } from \"../common/dialog\";\nimport { getEffectiveOptions, IOpenDialogResponse, DialogResultImpl } from \"../common/dialogutils\";\nimport { LoadingIndicatorOptions } from \"../common/loadingindicator\";\nimport {\n    IAggregation,\n    IContextItem,\n    IDataObjectContextItem,\n    IDataObjectContextItemMetadata,\n    IDependentDataObjectsContextItemMetadata,\n    IFieldAggregation,\n    IMassDataObjectContextItem,\n    IMassDataObjectContextItemMetadata,\n    IScriptedAggregation,\n} from \"../common/context\";\nimport { Area, Coordinate, IFlyoutMenuItem, IMenuItem, IRadialMenuItem, RadialMenuOptions } from \"../common/overlay\";\n\nimport {\n    FieldValueChangeNotifier,\n    ContextItemChangeNotifier,\n    RuntimeDataObjectContextItem,\n    RuntimeGroupedAggregation,\n    RuntimeMassDataObjectContextItem,\n    RuntimeUngroupedAggregation,\n    IRuntimeContextItem,\n    RuntimeDependentDataObjectsContextItem,\n    RuntimeFieldAggregation,\n    RuntimeScriptedAggregation,\n    IRuntimeAggregation,\n} from \"../common/runtimeContext\";\nexport * from \"../common/context\";\nexport * from \"../common/overlay\";\n\nimport DefaultTokens from \"@smartdesign/design-tokens\";\nimport { ACTION_MENU_ID, ICommand, IGroup, VIEW_MENU_ID } from \"../common/command\";\nimport { CommandRegistry } from \"../common/commandregistry\";\nimport { AppSettings, AppSettingsScope } from \"../common/settings\";\nimport { AppSettingsImpl } from \"../common/runtimeSettings\";\nimport { IInputDevice, InputDeviceType } from \"../common/devices\";\nexport * from \"../common/devices\";\n\nclass Navigator implements INavigator {\n    constructor(private communicator: Communicator<IHostAPI>) {}\n\n    navigate(intent: string, options?: INavigationOptions): Promise<void> {\n        return this.communicator.invokeRelaxed(\"navigate\", intent, options);\n    }\n    navigateWithRecord(\n        objectType: string,\n        gguid: string,\n        intent?: string,\n        options?: IRecordNavigationOptions\n    ): Promise<void> {\n        return this.communicator.invokeRelaxed(\"navigateWithRecord\", objectType, gguid, intent, options);\n    }\n    navigateWithRecords(\n        objectType: string,\n        selection: INavigationSelection,\n        intent?: string,\n        options?: INavigationOptions\n    ): Promise<void> {\n        return this.communicator.invokeRelaxed(\"navigateWithRecords\", objectType, selection, intent, options);\n    }\n    navigateToDossier(\n        source: ISingleSelection,\n        selection?: ISingleSelection,\n        intent?: string,\n        navigateToDossier?: string[],\n        options?: INavigationOptions\n    ): Promise<void> {\n        return this.communicator.invokeRelaxed(\n            \"navigateToDossier\",\n            source,\n            selection,\n            intent,\n            navigateToDossier,\n            options\n        );\n    }\n}\n\nclass NavigationImpl implements SmartDesign.INavigation {\n    private _supportedNavigationModes: BackNavigationMode[];\n    private _intents: string[];\n    private _reloadSupported: boolean;\n    private _navigator: INavigator;\n    private _navigationScheduler: (actor) => void = (actor) =>\n        setTimeout(() => {\n            actor();\n        }, 0);\n\n    constructor(initParameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {\n        this._intents = (initParameters.intents || []).slice();\n        this._reloadSupported = initParameters.reloadSupported;\n        this._supportedNavigationModes = (initParameters.backNavigationModes || []).slice();\n        this._navigator = new Navigator(communicator);\n    }\n    public get intents(): string[] {\n        return this._intents.slice();\n    }\n\n    public isBackwardNavigationModeSupported(mode: BackNavigationMode): boolean {\n        return mode === \"NONE\" || this._supportedNavigationModes.indexOf(mode) > -1;\n    }\n\n    public setBackwardNavigationMode(mode: BackNavigationMode): Promise<void> {\n        if (!this.isBackwardNavigationModeSupported(mode)) {\n            return Promise.reject(new Error(\"Navigation mode is not supported\"));\n        }\n        return this.communicator.invoke(\"setBackwardNavigationMode\", mode);\n    }\n\n    public navigate(...args: any[]): INavigationBuilder {\n        let intent;\n        if (args.length >= 1) {\n            intent = args[0];\n        }\n        const navigationBuilder: INavigationBuilder = new NavigationBuilder(this._navigator).withIntent(intent);\n        this.triggerNavigation(navigationBuilder);\n        return navigationBuilder;\n    }\n    public navigateWithRecord(...args: any[]): INavigationWithRecordBuilder {\n        let objectType;\n        let gguid;\n        let intent;\n        if (args.length >= 2) {\n            objectType = args[0];\n            gguid = args[1];\n        }\n        if (args.length >= 3) {\n            intent = args[2];\n        }\n        const navigationBuilder: INavigationWithRecordBuilder = new NavigationWithRecordBuilder(this._navigator)\n            .withObjectType(objectType)\n            .withGguid(gguid)\n            .withIntent(intent);\n        this.triggerNavigation(navigationBuilder);\n        return navigationBuilder;\n    }\n    public navigateWithRecords(...args: any[]): INavigationWithRecordsBuilder {\n        let objectType;\n        let gguid;\n        let gguids;\n        let intent;\n        if (args.length >= 2) {\n            objectType = args[0];\n            gguids = args[1];\n        }\n        if (args.length >= 3) {\n            gguid = args[2];\n        }\n        if (args.length >= 4) {\n            intent = args[3];\n        }\n        const navigationBuilder: INavigationWithRecordsBuilder = new NavigationWithRecordsBuilder(this._navigator)\n            .withObjectType(objectType)\n            .withGguids(gguids)\n            .withSelectedGguid(gguid)\n            .withIntent(intent);\n        this.triggerNavigation(navigationBuilder);\n        return navigationBuilder;\n    }\n    public navigateToDossier(...args: any[]): INavigationWithDossierBuilder {\n        let objectType;\n        let gguid;\n        let intent;\n        if (args.length >= 2) {\n            objectType = args[0];\n            gguid = args[1];\n        }\n        if (args.length >= 3) {\n            intent = args[2];\n        }\n        const navigationBuilder: INavigationWithDossierBuilder = new NavigationWithDossierBuilder(this._navigator)\n            .withSourceGguid(gguid)\n            .withSourceObjectType(objectType)\n            .withIntent(intent);\n        this.triggerNavigation(navigationBuilder);\n        return navigationBuilder;\n    }\n    public get reloadSupported(): boolean {\n        return this._reloadSupported;\n    }\n    public reload(): Promise<void> {\n        if (!this.reloadSupported) {\n            return Promise.reject(new Error(\"Reload is not supported\"));\n        }\n        return this.communicator.invoke(\"reload\");\n    }\n    public navigateBack(): Promise<void> {\n        return this.communicator.invoke(\"navigateBack\");\n    }\n    public navigateHome(): Promise<void> {\n        return this.communicator.invoke(\"navigateHome\");\n    }\n    public urlChanged(url: string): Promise<void> {\n        return this.communicator.invoke(\"urlChanged\", url);\n    }\n    private triggerNavigation(navigationBuilder: INavigationBuilder): void {\n        this._navigationScheduler(() => navigationBuilder.navigate());\n    }\n}\n\nclass SearchImpl implements SmartDesign.ISearch {\n    private _openSearchSupported: boolean;\n    private isSearchPending: boolean;\n\n    constructor(private initParameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {\n        this._openSearchSupported = initParameters.openSearchSupported;\n    }\n\n    public get openSearchSupported(): boolean {\n        return this._openSearchSupported;\n    }\n\n    public openSearch(objectType: string, query?: SearchQuery): Promise<OpenSearchResponse> {\n        if (!this.openSearchSupported) {\n            return Promise.reject(new Error(\"OpenSearch api method is not supported\"));\n        }\n        if (this.isSearchPending) {\n            return Promise.reject(\n                new Error(\n                    \"The OpenSearch method can not be executed simultaneously, the operation is already in a pending state.\"\n                )\n            );\n        }\n\n        const openSearch: Promise<OpenSearchResponse> = this.communicator.invokeRelaxed(\n            \"openSearch\",\n            objectType,\n            query\n        );\n        this.isSearchPending = true;\n        return openSearch\n            .then((p) => {\n                this.isSearchPending = false;\n                return p;\n            })\n            .catch((e) => {\n                this.isSearchPending = false;\n                throw e;\n            });\n    }\n}\n\nclass SettingsImpl implements SmartDesign.ISettings {\n    constructor(private initparameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {}\n\n    public get appSettingsSupported(): boolean {\n        return this.initparameters.appSettingsSupported;\n    }\n\n    public getAppSettings?<T extends Record<string, unknown> = any>(\n        scope: AppSettingsScope = \"EFFECTIVE\",\n        appId: string = null\n    ): AppSettings<T> {\n        if (!this.appSettingsSupported) {\n            throw new Error(\"App settings API is not supported\");\n        }\n        return new AppSettingsImpl<T>(this.communicator, scope, appId);\n    }\n}\n\nclass DialogApiImpl implements SmartDesign.IDialogApi {\n    private _openSupported: boolean;\n\n    constructor(private initParameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {\n        this._openSupported = initParameters.openDialogSupported;\n    }\n\n    public get openSupported(): boolean {\n        return this._openSupported;\n    }\n\n    public alert(title: string, message: string, style?: DialogStyle): Promise<IDialogResult> {\n        return this.open({\n            title,\n            message,\n            style,\n        });\n    }\n    public confirm(title: string, message: string, style?: DialogStyle): Promise<IDialogResult> {\n        return this.open({\n            title,\n            message,\n            // eslint-disable-next-line camelcase\n            buttons: DialogButtonPreset_YES_NO,\n            style,\n        });\n    }\n    public open(options: IDialogOptions): Promise<IDialogResult> {\n        if (!this.openSupported) {\n            return Promise.reject(new Error(\"Dialog API is not supported\"));\n        }\n\n        const openDialog: Promise<IOpenDialogResponse> = this.communicator.invokeRelaxed(\n            \"openDialog\",\n            getEffectiveOptions(options)\n        );\n\n        return openDialog.then((response) => new DialogResultImpl(response));\n    }\n}\n\ntype StateChangeCallback<T> = (newState: T, initialStateChange: boolean) => void;\n\nclass StateImpl<T extends ICustomState> implements SmartDesign.IState<T> {\n    private _updateSupported: boolean;\n    private _onChangeSupported: boolean;\n    private _current: T & BasicState;\n    private _callbacks: Array<StateChangeCallback<T & BasicState>> = [];\n\n    constructor(\n        initParameters: InitParameters<T>,\n        private communicator: Communicator<IHostAPI>,\n        private contextItemEnhancer: (item: IContextItem | IAggregation) => IContextItem | IAggregation\n    ) {\n        this._updateSupported = initParameters.stateUpdateSupported;\n        this._onChangeSupported = initParameters.stateOnChangeSupported;\n        this._current = this.enhanceWithAPIMethods((initParameters.state || {}) as T & BasicState);\n        this.communicator.expose(\n            {\n                setState: (state) => this.setState(state),\n            },\n            \"setState\"\n        );\n        /* Promise resolve does not work, as this class is created in a micro-task.\n           In order to properly defer the initial state change event, we have to use\n           setTimeout, so that the user land code can actually subscribe to it before\n           firing the event.*/\n        setTimeout(() => {\n            this.fireStateChange(true);\n        }, 0);\n    }\n\n    get onChangeSupported() {\n        return this._onChangeSupported;\n    }\n\n    get updateSupported() {\n        return this._updateSupported;\n    }\n\n    public onChange(callback: StateChangeCallback<T & BasicState>): IDisposable {\n        this._callbacks.push(callback);\n        return {\n            dispose: () => {\n                this._callbacks = this._callbacks.filter((p) => p !== callback);\n            },\n        };\n    }\n\n    public update(): Promise<T & BasicState> {\n        if (!this.updateSupported) {\n            return Promise.reject(new Error(\"UpdateState api method is not supported\"));\n        }\n        return this.communicator.invoke(\"updateState\", this._current).then(() => this._current);\n    }\n\n    get current(): T & BasicState {\n        return this._current;\n    }\n\n    private setState(state: T & BasicState) {\n        this._current = this.enhanceWithAPIMethods(state);\n        this.fireStateChange(false);\n    }\n\n    private enhanceWithAPIMethods(state: T & BasicState): T & BasicState {\n        if (state) {\n            Object.keys(state).forEach((prop: keyof (T & BasicState)) => {\n                const value = state[prop];\n                if (isContextItem(value) || isFieldAggregation(value) || isScriptedAggregation(value)) {\n                    (state[prop] as IContextItem | IAggregation) = this.contextItemEnhancer(value);\n                }\n            });\n        }\n        return state;\n    }\n\n    private fireStateChange(initial: boolean) {\n        if (this.onChangeSupported) {\n            this._callbacks.forEach((p) => p(this._current, initial));\n        }\n    }\n}\n\nclass ActivationChangeHandlerImpl implements IActivationChangeHandler {\n    constructor(private handler: (message: ActivationMessage) => void) {}\n    public onActivationChanged(message: ActivationMessage) {\n        this.handler(message);\n    }\n}\n\nclass ActivationServiceImpl implements SmartDesign.IActivationService {\n    constructor(private communicator: Communicator<IHostAPI>) {}\n\n    public registerListener(actor: (message: ActivationMessage) => void): IDisposable {\n        const api = new ActivationChangeHandlerImpl(actor);\n        const disposables = getMethods(api).map((method) => this.communicator.expose(api, method));\n        const dispose = () => {\n            disposables.forEach((disposable) => disposable());\n        };\n        return { dispose };\n    }\n}\n\nclass InputDeviceImpl implements SmartDesign.IInputDeviceService {\n    readonly devicesSupported: boolean;\n    constructor(initParemeters: InitParameters<any>) {\n        this.devicesSupported = initParemeters.devicesSupported;\n    }\n\n    getDevice<T extends InputDeviceType>(type: T): Promise<IInputDevice & { type: T }> {\n        if (type != \"BarcodeScanner\" && type != \"NFCReader\") {\n            return Promise.reject(new Error(`Accessing device with type \"${type}\" is not supported!`));\n        }\n        if (!this.devicesSupported) {\n            return Promise.reject(new Error(\"Accessing devices are not supported!\"));\n        }\n        return Promise.reject(new Error(\"Accessing devices are not implemented!\"));\n    }\n}\n\nclass ContextImpl implements SmartDesign.IContext {\n    private readonly primaryDataObject?: IDataObjectContextItem;\n    private readonly primaryMassData?: IMassDataObjectContextItem;\n\n    readonly primaryDataObjectAccessorSupported?: boolean;\n    readonly primaryMassDataAccessorSupported?: boolean;\n\n    constructor(\n        initParameters: InitParameters<any>,\n        private communicator: Communicator,\n        private fieldValueChangeNotifier: FieldValueChangeNotifier,\n        private contextItemChangeNotifier: ContextItemChangeNotifier\n    ) {\n        const dataObjectContextItem = this.enhanceContextItemWithAPIMethods(initParameters.primaryDataObject);\n        const primaryMassData = this.enhanceContextItemWithAPIMethods(initParameters.primaryMassData);\n\n        this.primaryDataObject = dataObjectContextItem?.type == \"DataObject\" ? dataObjectContextItem : undefined;\n        this.primaryMassData = primaryMassData?.type == \"MassData\" ? primaryMassData : undefined;\n\n        this.primaryDataObjectAccessorSupported = initParameters.primaryDataObjectAccessorSupported;\n        this.primaryMassDataAccessorSupported = initParameters.primaryMassDataAccessorSupported;\n    }\n\n    enhanceContextItemWithAPIMethods(\n        contextItem:\n            | IContextItem\n            | IAggregation\n            | IDataObjectContextItemMetadata\n            | IMassDataObjectContextItemMetadata\n            | IDependentDataObjectsContextItemMetadata\n    ): IRuntimeContextItem | IRuntimeAggregation | undefined {\n        if (!contextItem) {\n            return undefined;\n        }\n\n        if (contextItem.type == \"DataObject\") {\n            return new RuntimeDataObjectContextItem(\n                contextItem,\n                this.contextItemChangeNotifier,\n                this.fieldValueChangeNotifier,\n                this.communicator\n            );\n        } else if (contextItem.type == \"MassData\") {\n            return new RuntimeMassDataObjectContextItem<any>(\n                contextItem,\n                this.contextItemChangeNotifier,\n                this.communicator\n            );\n        } else if (contextItem.type == \"DependentDataObjects\") {\n            return new RuntimeDependentDataObjectsContextItem<any>(\n                contextItem,\n                this.contextItemChangeNotifier,\n                this.communicator\n            );\n        } else if (isScriptedAggregation(contextItem)) {\n            return new RuntimeScriptedAggregation(contextItem, this.contextItemChangeNotifier, this.communicator);\n        } else if (isFieldAggregation(contextItem)) {\n            return new RuntimeFieldAggregation(contextItem, this.contextItemChangeNotifier, this.communicator);\n        } else if (contextItem.type == \"Aggregation\") {\n            if (contextItem.grouped) {\n                return new RuntimeGroupedAggregation(contextItem, this.contextItemChangeNotifier, this.communicator);\n            } else {\n                return new RuntimeUngroupedAggregation(contextItem, this.contextItemChangeNotifier, this.communicator);\n            }\n        }\n\n        return undefined;\n    }\n\n    getPrimaryDataObject<T = any>(): Promise<IDataObjectContextItem<T> | undefined> {\n        if (!this.primaryDataObjectAccessorSupported) {\n            return Promise.reject(new Error(\"Accessing the primary data object is not supported\"));\n        }\n        return Promise.resolve(this.primaryDataObject);\n    }\n\n    getPrimaryMassData<T = any>(): Promise<IMassDataObjectContextItem<T> | undefined> {\n        if (!this.primaryMassDataAccessorSupported) {\n            return Promise.reject(new Error(\"Accessing the primary mass data is not supported\"));\n        }\n        return Promise.resolve(this.primaryMassData);\n    }\n}\n\nclass CommandServiceImpl implements SmartDesign.ICommandService {\n    private _commandRegistry: CommandRegistry;\n\n    public commandsSupported: boolean;\n\n    constructor(initParameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {\n        this._commandRegistry = new CommandRegistry(this.communicator);\n        this.commandsSupported = initParameters.commandsSupported;\n    }\n\n    public pointIds: SmartDesign.ICommandService[\"pointIds\"] = {\n        actionMenu: ACTION_MENU_ID,\n        viewMenu: VIEW_MENU_ID,\n    };\n\n    public contributeGroup(command: IGroup): IDisposable {\n        if (!this.commandsSupported) {\n            return {\n                dispose: () => {\n                    //\n                },\n            };\n        }\n        return this._commandRegistry.contributeGroup(command);\n    }\n\n    public contributeCommand(command: ICommand): IDisposable {\n        if (!this.commandsSupported) {\n            return {\n                dispose: () => {\n                    //\n                },\n            };\n        }\n        return this._commandRegistry.contributeCommand(command);\n    }\n}\n\nclass OverlayImpl implements SmartDesign.IOverlay {\n    public readonly flyoutMenuSupported: boolean;\n    public readonly radialMenuSupported: boolean;\n\n    constructor(initParameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {\n        this.flyoutMenuSupported = initParameters.flyoutMenuSupported;\n        this.radialMenuSupported = initParameters.radialMenuSupported;\n    }\n\n    openFlyoutMenu(items: IFlyoutMenuItem[], positionOrArea: Coordinate | Area): Promise<IMenuItem | null> {\n        if (!this.flyoutMenuSupported) {\n            return Promise.reject(new Error(\"Opening a flyout menu is not supported!\"));\n        }\n        const lastActiveElement = document.activeElement as HTMLElement;\n        const result: Promise<IMenuItem | null> = this.communicator.invokeRelaxed(\n            \"openFlyoutMenu\",\n            items,\n            positionOrArea\n        );\n        result.then((p) => {\n            lastActiveElement && lastActiveElement.focus && lastActiveElement.focus();\n            return p;\n        });\n        return result;\n    }\n\n    openRadialMenu(\n        items: IRadialMenuItem[],\n        radialMenuOptions: RadialMenuOptions,\n        position: Coordinate\n    ): Promise<IRadialMenuItem | null> {\n        if (!this.radialMenuSupported) {\n            return Promise.reject(new Error(\"Opening a radial menu is not supported!\"));\n        }\n        const lastActiveElement = document.activeElement as HTMLElement;\n        const result: Promise<IRadialMenuItem | null> = this.communicator.invokeRelaxed(\n            \"openRadialMenu\",\n            items,\n            radialMenuOptions,\n            position\n        );\n        result.then((p) => {\n            lastActiveElement && lastActiveElement.focus && lastActiveElement.focus();\n            return p;\n        });\n        return result;\n    }\n}\n\nclass LoadingIndicatorImpl implements SmartDesign.ILoadingIndicator {\n    constructor(public initParameters: InitParameters<any>, private communicator: Communicator<IHostAPI>) {}\n\n    public show(options?: LoadingIndicatorOptions): Promise<void> {\n        return this.communicator.invoke(\"showLoadingIndicator\", options);\n    }\n    public hide(): Promise<void> {\n        return this.communicator.invoke(\"hideLoadingIndicator\");\n    }\n    public showDuring(promise: Promise<any>, options?: LoadingIndicatorOptions): Promise<void> {\n        return this.show(options).then(() => promise.catch(() => null).then(() => this.hide()));\n    }\n\n    public get showSupported(): boolean {\n        return this.initParameters.loadingIndicatorShowSupported;\n    }\n    public get blockSupported(): boolean {\n        return this.initParameters.loadingIndicatorBlockSupported;\n    }\n    public get blockHostSupported(): boolean {\n        return this.initParameters.loadingIndicatorBlockHostSupported;\n    }\n}\n\nclass SmartDesignAPIImpl<T extends ICustomState> implements SmartDesign.IAPI<T> {\n    private _fieldValueChangeNotifier: FieldValueChangeNotifier = new FieldValueChangeNotifier(this.communicator);\n    private _contextItemChangeNotifier: ContextItemChangeNotifier = new ContextItemChangeNotifier(this.communicator);\n\n    constructor(public initParameters: InitParameters<T>, private communicator: Communicator<IHostAPI>) {\n        this.Navigation = new NavigationImpl(this.initParameters, this.communicator);\n        this.Search = new SearchImpl(this.initParameters, this.communicator);\n        this.Settings = new SettingsImpl(this.initParameters, this.communicator);\n        this.Dialog = new DialogApiImpl(this.initParameters, this.communicator);\n        this.ActivationService = new ActivationServiceImpl(this.communicator);\n        this.InputDevice = new InputDeviceImpl(this.initParameters);\n\n        const context = new ContextImpl(\n            this.initParameters,\n            this.communicator,\n            this._fieldValueChangeNotifier,\n            this._contextItemChangeNotifier\n        );\n        this.Context = context;\n        this.State = new StateImpl<T>(this.initParameters, this.communicator, (item) =>\n            context.enhanceContextItemWithAPIMethods(item)\n        );\n        this.Overlay = new OverlayImpl(this.initParameters, this.communicator);\n        this.LoadingIndicator = new LoadingIndicatorImpl(this.initParameters, this.communicator);\n        this.Command = new CommandServiceImpl(this.initParameters, this.communicator);\n    }\n\n    public get locale() {\n        if (this.initParameters.locale != null) {\n            return { ...this.initParameters.locale };\n        }\n        return null;\n    }\n\n    public Navigation: SmartDesign.INavigation;\n    public Search: SmartDesign.ISearch;\n    public Settings: SmartDesign.ISettings;\n    public Dialog: SmartDesign.IDialogApi;\n    public State: SmartDesign.IState<T>;\n    public ActivationService: SmartDesign.IActivationService;\n    public Context: SmartDesign.IContext;\n    public Overlay: SmartDesign.IOverlay;\n    public Command: SmartDesign.ICommandService;\n    public LoadingIndicator: SmartDesign.ILoadingIndicator;\n    public InputDevice: SmartDesign.IInputDeviceService;\n\n    public get restEnabled(): boolean {\n        return this.initParameters.restEnabled;\n    }\n\n    public inheritDesignTokens(applyAsCssVariables = true): Record<string, string | number> {\n        const tokens: Record<string, string | number> = {\n            ...DefaultTokens,\n            ...(this.initParameters.designTokens || {}),\n        };\n        if (applyAsCssVariables) {\n            const cssVariables = tokensToVariables(tokens);\n            const styles = document.createElement(\"style\");\n            styles.innerText = cssVariables;\n            document.head.appendChild(styles);\n        }\n        return tokens;\n    }\n\n    public provideCaption(caption: string): Promise<void> {\n        return this.communicator.invoke(\"provideCaption\", caption);\n    }\n\n    public fetch(input: string, init?: RequestInit): Promise<Response> {\n        if (!this.initParameters.restEnabled) {\n            return Promise.reject(new Error(\"Rest API is disabled\"));\n        }\n        input = this.initParameters.baseUrl + input;\n        init = init || {};\n        init.mode = \"cors\";\n        init.headers = init.headers || [];\n\n        this.addMissingHeader(init.headers, \"SMARTDESIGN-TOKEN\", this.initParameters.token);\n        this.addMissingHeader(init.headers, \"Accept\", \"application/json\");\n\n        if (init.body) {\n            this.addMissingHeader(init.headers, \"Content-Type\", \"application/json\");\n        }\n\n        return fetch(input, init);\n    }\n\n    public trackUrlChanges() {\n        trackUrlChanges((url) => this.Navigation.urlChanged(url));\n    }\n\n    public requestResize(width: number, height: number): Promise<void> {\n        return this.communicator.invoke(\"requestResize\", width, height);\n    }\n\n    private addMissingHeader<U extends RequestInit[\"headers\"]>(headers: U, key: string, defaultValue: string): void {\n        if (headers instanceof Headers) {\n            if (!headers.has(key)) {\n                headers.append(key, defaultValue);\n            }\n        } else if (Array.isArray(headers)) {\n            if (headers.filter((header) => header[0].toLowerCase() === key.toLowerCase()).length === 0) {\n                (headers as string[][]).push([key, defaultValue]);\n            }\n        } else {\n            if (!headers[key]) {\n                headers[key] = defaultValue;\n            }\n        }\n    }\n}\n/**\n * Main entry point for the html app integration of SmartDesign\n * Amongst other things, it provides access to the rest api,\n * can trigger navigations in the surrounding SmartDesign application etc.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace SmartDesign {\n    export interface IAPI<T extends ICustomState = ICustomState> {\n        /**\n         * Provides access to the Navigation api.\n         */\n        Navigation: INavigation;\n        /**\n         * Provides access to the Dialog api.\n         */\n        Dialog: IDialogApi;\n        /**\n         * Provides access to the Search api.\n         */\n        Search: ISearch;\n        /**\n         * Provides access to the Settings api.\n         */\n        Settings?: ISettings;\n        /**\n         * Provides acess to the activation service.\n         */\n        ActivationService: IActivationService;\n        /**\n         * Provides access to context items\n         */\n        Context: IContext;\n        /**\n         * Provides access to the Overlay api\n         */\n        Overlay: IOverlay;\n\n        /**\n         * Provides access to commands\n         */\n        Command: ICommandService;\n        /**\n         * Provides access to the application-wise loading indicator.\n         */\n        LoadingIndicator: ILoadingIndicator;\n        /**\n         * Provides access to the State api\n         */\n        State: IState<T>;\n\n        /**\n         * Provides access to platform specific input devices\n         */\n        InputDevice: IInputDeviceService;\n\n        /**\n         * Inherits design tokens from the surrounding application and applies them as css variables by default.\n         * The inherited design tokens are returned.\n         */\n        inheritDesignTokens?(applyAsCssVariables?: boolean): Record<string, string | number>;\n\n        /**\n         * An object containing information about the user locale\n         */\n        readonly locale?: LocaleInformation;\n        /**\n         * Sets the caption of the surrounding container e.g. in case of web apps the title of the page.\n         */\n        provideCaption?: (caption: string) => Promise<void>;\n\n        /**\n         * Provides access to the REST API and automatically appends the necessary request headers.\n         * Wraps the fetch api, for further information see: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n         * Returns a rejected promise in case when the rest api is disabled.\n         */\n        fetch(input: string, init?: RequestInit): Promise<Response>;\n\n        /**\n         * Enables automatic tracking of url changes in order to save the state of the app properly.\n         */\n        trackUrlChanges(): void;\n        /**\n         * Signals a change in the required width and height of the embedded app / widget.\n         * The values are interpreted as pixels.\n         * In case when the content must adapt to the container size, use any negative number.\n         */\n        requestResize(width: number, height: number): void;\n        /**\n         * A flag which indicates whether the rest operations are enabled\n         */\n        readonly restEnabled: boolean;\n    }\n    /**\n     * Entry point for triggering a navigation in the surrounding SmartDesign application\n     */\n    export interface INavigation {\n        /**\n         * Returns a flag which indicates whether the given navigation mode is supported.\n         * @param mode BackNavigationMode to be checked\n         */\n        isBackwardNavigationModeSupported(mode: BackNavigationMode): boolean;\n        /**\n         * Sets the backward navigation mode which determines how the navigation stack is treated.\n         * Returns a rejected Promise if the navigation mode is not supported.\n         * @param mode BackNavigationMode to apply\n         */\n        setBackwardNavigationMode(mode: BackNavigationMode): Promise<void>;\n\n        /**\n         * Triggers a navigation with the given navigation intent without any context information.\n         * Additional navigation parameters can be configured by using the returned NavigationBuilder.\n         * @see {@link INavigationBuilder}\n         * @param {string} intent\n         * @returns {INavigationBuilder}\n         * @memberof Navigation\n         */\n        navigate(intent?: string): INavigationBuilder;\n        /**\n         * Triggers a navigation to the given dataobject set by returned navigation builder.\n         * @see {@link INavigationWithRecordBuilder}\n         * @returns {INavigationWithRecordBuilder}\n         * @memberof Navigation\n         */\n        navigateWithRecord(): INavigationWithRecordBuilder;\n        /**\n         * Triggers a navigation to the given dataobject, by default it uses the\n         * 'open record with list' navigation intent. Additional navigation parameters\n         * can be configured by using the returned NavigationWithRecordBuilder.\n         * @see {@link INavigationWithRecordBuilder}\n         * @param {string} objectType\n         * @param {String} gguid\n         * @param {string} [intent]\n         * @returns {INavigationWithRecordBuilder}\n         * @memberof Navigation\n         */\n        navigateWithRecord(objectType: string, gguid: string, intent?: string): INavigationWithRecordBuilder;\n        /**\n         * Triggers a navigation with the selected data objects. Additional navigation parameters\n         * can be configured by using the returned NavigationWithRecordsBuilder.\n         * @see {@link INavigationWithRecordsBuilder}\n         * @returns {INavigationWithRecordsBuilder}\n         * @memberof Navigation\n         */\n        navigateWithRecords(): INavigationWithRecordsBuilder;\n\n        /**\n         * Triggers a navigation with the selected data objects. Additional navigation parameters\n         * can be configured by using the returned NavigationWithRecordsBuilder.\n         * @see {@link INavigationWithRecordsBuilder}\n         * @param {string} objectType type of the data objects\n         * @param {string[]} gguids array of the data objects ids\n         * @param {string} [selectedGguid] selected data object id, if there is any\n         * @param {string} [intent] navigation intent\n         * @returns {INavigationWithRecordsBuilder}\n         * @memberof Navigation\n         */\n        navigateWithRecords(\n            objectType: string,\n            gguids: string[],\n            selectedGguid?: string,\n            intent?: string\n        ): INavigationWithRecordsBuilder;\n        /**\n         * Triggers a navigation with dossier items of the source object. Additional navigation\n         * parameters can be configured by using the returned NavigationWithDossierBuilder.\n         * @see {@link INavigationWithDossierBuilder}\n         * @returns {INavigationWithDossierBuilder}\n         * @memberof Navigation\n         */\n        navigateToDossier(): INavigationWithDossierBuilder;\n        /**\n         * Triggers a navigation with dossier items of the source object. Additional navigation\n         * parameters can be configured by using the returned NavigationWithDossierBuilder.\n         * @see {@link INavigationWithDossierBuilder}\n         * @param {string} sourceObjectType type of the source data object\n         * @param {string} sourceGguid id of the source data object\n         * @param {string} [intent] Navigation intent\n         * @returns {INavigationWithDossierBuilder}\n         * @memberof Navigation\n         */\n        navigateToDossier(\n            sourceObjectType: string,\n            sourceGguid: string,\n            intent?: string\n        ): INavigationWithDossierBuilder;\n        /**\n         * Triggers a back navigation\n         */\n        navigateBack(): void;\n        /**\n         * Triggers a home navigation\n         */\n        navigateHome(): void;\n        /**\n         * A flag which indicates whether the api method [[reload]] is supported\n         */\n        reloadSupported?: boolean;\n        /**\n         * Reloads the current page(s) in the host application\n         */\n        reload(): void;\n        /**\n         * Signals a change in the state of the embedded app.\n         * This url is going to be used when restoring the app's state.\n         */\n        urlChanged(url: string): void;\n        /**\n         * List of possible navigation intents\n         */\n        readonly intents: string[];\n    }\n\n    /**\n     * Entry point for triggering search functionalities\n     */\n    export interface ISearch {\n        /**\n         * A flag which indicates whether the api method [[openSearch]] is supported\n         */\n        readonly openSearchSupported: boolean;\n        /**\n         * Opens a native search dialog and returns with the selected record's gguid.\n         * In case when the user cancels the operation, null value is returned.\n         * Returns a rejected promise in case when the api method is not supported.\n         */\n        openSearch(objectType: string, query?: SearchQuery): Promise<OpenSearchResponse>;\n    }\n\n    export interface ISettings {\n        /**\n         * A flag which indicates whether accessing the app settings is supported\n         */\n        readonly appSettingsSupported: boolean;\n\n        /**\n         * Returns the app settings for the given scope and app.\n         *\n         * Without parameters, it returns the effective settings for the current user and app.\n         *\n         * Reading the effective settings returns all the properties that affects the current user,\n         * including the global properties and the schema defaults as fallback\n         *\n         * Writing the effective settings will set the properties of the current user.\n         *\n         * @param scope The scope of the returned settings. EFFECTIVE by default.\n         * @param appId The id of the app which the settings belongs to. The current app if absent.\n         */\n        getAppSettings?<T extends Record<string, unknown> = any>(\n            scope?: AppSettingsScope,\n            appId?: string\n        ): AppSettings<T>;\n    }\n\n    export interface IDialogApi {\n        /**\n         * A flag which indicates whether opening a dialog is supported\n         */\n        readonly openSupported: boolean;\n        /**\n         * Opens a simple alert dialog with the given title and message.\n         */\n        alert(title: string, message: string, style?: DialogStyle): Promise<IDialogResult>;\n\n        /**\n         * Opens a simple confirmation dialog with the given title, message, a \"Yes\" and a \"No\" button.\n         *\n         * If \"Yes\" was pressed, the result's wasConfirmed() method returns true.\n         */\n        confirm(title: string, message: string, style?: DialogStyle): Promise<IDialogResult>;\n\n        /**\n         * Opens a dialog with the options given in the first argument.\n         */\n        open(options: IDialogOptions): Promise<IDialogResult>;\n    }\n\n    /**\n     * Entry point for accessing context items\n     */\n    export interface IState<T extends ICustomState> {\n        /**\n         * A flag which indicates whether the state change part of the api is supported.\n         */\n        readonly onChangeSupported: boolean;\n        /**\n         * Provides a hook for initial and subsequent state change handling.\n         */\n        onChange(callback: (newState: T & BasicState, initialStateChange: boolean) => void): IDisposable | undefined;\n\n        /**\n         * A flag which indicates whether the state update part of the api is supported.\n         */\n        readonly updateSupported: boolean;\n        /**\n         * Updates the state on the host side based on the changes made in the client.\n         * This must be invoked after e.g. a field value has been changed.\n         */\n        update(): Promise<T & BasicState>;\n\n        /**\n         * Provides access to the latest state instance.\n         */\n        readonly current: T & BasicState;\n    }\n\n    /**\n     * Entry point for registering listener to the activation event.\n     */\n    export interface IActivationService {\n        /**\n         * Register a listener which is notified, when the enable state of\n         * the web app widget is changed.\n         * @param {(ActivationMessage) => void} actor\n         * @returns {IDisposable}\n         * @memberof ActivationService\n         */\n        registerListener(actor: (message: ActivationMessage) => void): IDisposable;\n    }\n\n    /**\n     * Provides access to context items\n     */\n    export interface IContext {\n        /**\n         * A flag which indicates whether accessing the primary context item is suppoorted\n         */\n        readonly primaryDataObjectAccessorSupported?: boolean;\n\n        /**\n         * Returns a Promise which contains metadata for the primary data object or undefined if it's absent\n         */\n        getPrimaryDataObject<T = any>(): Promise<IDataObjectContextItem<T> | undefined>;\n\n        /**\n         * A flag which indicates whether accessing the primary mass data context item is suppoorted\n         */\n        readonly primaryMassDataAccessorSupported?: boolean;\n\n        /**\n         * Returns a Promise which contains metadata for the primary mass data or undefined if it's absent\n         */\n        getPrimaryMassData<T = any>(): Promise<IMassDataObjectContextItem<T> | undefined>;\n    }\n\n    /**\n     * Entry point for opening overlays\n     */\n    export interface IOverlay {\n        /**\n         * A flag which indicates whether opening a flyout menu is supported\n         */\n        readonly flyoutMenuSupported: boolean;\n\n        /**\n         * A flag which indicates whether opening a radial menu is supported\n         */\n        readonly radialMenuSupported: boolean;\n\n        /**\n         * Opens a flyout menu in the host environment\n         *\n         * @param {IFlyoutMenuItem[]} items The menu items to show\n         * @param {Coordinate | Area} positionOrArea The position or area relative to the client window (e.g. { x: event.clientX, y: event.clientY } or element.getBoundingClientRect())\n         * @returns {(Promise<IFlyoutMenuItem | null>)} The selected menu item or null if the flyout menu was closed without selecting anything.\n         */\n        openFlyoutMenu(items: IFlyoutMenuItem[], positionOrArea: Coordinate | Area): Promise<IFlyoutMenuItem | null>;\n\n        /**\n         * Opens the radial menu in the host environment\n         * Please note that the maximum amount of items to be shown might be limited by the host environment.\n         *\n         * @param {IRadialMenuItem[]} items The radial menu items to show\n         * @param {RadialMenuOptions} radialMenuOptions Representation related options\n         * @param {Coordinate} position The position relative to the client window (e.g. event.clientX, event.clientY)\n         * @returns {(Promise<IRadialMenuItem | null>)} The selected menu item or null if the radial menu was closed without selecting anything.\n         */\n        openRadialMenu(\n            items: IRadialMenuItem[],\n            radialMenuOptions: RadialMenuOptions,\n            position: Coordinate\n        ): Promise<IRadialMenuItem | null>;\n    }\n\n    /**\n     * Entry point for commands\n     */\n    export interface ICommandService {\n        readonly commandsSupported: boolean;\n\n        readonly pointIds: {\n            actionMenu: typeof ACTION_MENU_ID;\n            viewMenu: typeof VIEW_MENU_ID;\n        };\n\n        /**\n         * Contributes a command\n         * @param command The command to be shown\n         */\n        contributeCommand(command: ICommand): IDisposable;\n\n        /**\n         * Contributes a group\n         * @param command The group to be shown\n         */\n        contributeGroup(command: IGroup): IDisposable;\n    }\n\n    /**\n     * Entry point for accessing the main application-wise loading indicator\n     */\n    export interface ILoadingIndicator {\n        /**\n         * Shows the main application-wise loading indicator.\n         *\n         * @param options Defines options that can modify behaviors like UI blocking or timeout.\n         */\n        show(options?: LoadingIndicatorOptions);\n        /**\n         * Hides the main application-wise loading indicator.\n         */\n        hide();\n        /**\n         * Shows the main application-wise loading indicator until the given promise is pending.\n         *\n         * @param promise The promise that controls the loading indicator state.\n         */\n        showDuring(promise: Promise<any>, options?: LoadingIndicatorOptions);\n        /**\n         * A flag which indicates whether showing the loading indicator is supported.\n         */\n        readonly showSupported: boolean;\n        /**\n         * A flag which indicates whether user interaction blocking on the current app/widget is supported.\n         */\n        readonly blockSupported: boolean;\n        /**\n         * A flag which indicates whether user interaction blocking on the host is supported.\n         */\n        readonly blockHostSupported: boolean;\n    }\n\n    /**\n     * Entry point for accessing platform specific input devices\n     */\n    export interface IInputDeviceService {\n        devicesSupported: boolean;\n        /**\n         * Returns an accessor for the requested device\n         * @param type The type of the requested device\n         */\n        getDevice<T extends InputDeviceType>(type: T): Promise<IInputDevice & { type: T }>;\n    }\n}\n\nexport type IPromise<T> = Promise<T>;\n\n/**\n * Connects to the SmartDesign api.\n * @param targetOrigin The origin of the SmartDesign host, for hosted apps this can be omitted\n * @param target Accessor method to the window object of the SmartDesign host, usually ()=> window.parent\n * @param source Accessor method to the window object of the SmartDesign app frame, usually ()=> window\n * @param timeout Timeout for the sent messages\n */\nexport const connect = <T extends ICustomState>(\n    targetOrigin: string = window.location.origin,\n    target?: () => IEndpoint,\n    source?: () => IEndpoint,\n    timeout = 10000\n): IPromise<SmartDesign.IAPI<T>> => {\n    const delayedConnect = new Promise<SmartDesign.IAPI<T>>((resolve) => {\n        setTimeout(() => {\n            if ((window as any).SD_DIRECT) {\n                (window as any).SD_DIRECT.initApp();\n                const loop = () => {\n                    if ((window as any).SD_DIRECT_API) {\n                        resolve((window as any).SD_DIRECT_API);\n                    } else {\n                        requestAnimationFrame(loop);\n                    }\n                };\n                loop();\n            } else {\n                resolve((window as any).SD_DIRECT_API);\n            }\n        }, 0);\n    }).then((directApi) => {\n        if (directApi) {\n            return Promise.resolve(directApi as SmartDesign.IAPI<T>);\n        } else {\n            const waitForLoad = new Promise<any>((resolve) => {\n                if (document.readyState === \"complete\") {\n                    resolve(void 0);\n                } else {\n                    window.addEventListener(\"load\", resolve);\n                }\n            });\n            const sourceProvider = source ? source : () => window;\n            const communicator = new Communicator<IHostAPI>(\n                targetOrigin,\n                target ? target : () => window.parent,\n                sourceProvider,\n                timeout\n            );\n            const sourceWindow = sourceProvider() as Window;\n            const origin = sourceWindow.location ? sourceWindow.location.origin : undefined;\n            return waitForLoad\n                .then(() => communicator.invoke(\"initApp\", origin))\n                .then((initParameters: InitParameters<T>) => {\n                    return new SmartDesignAPIImpl<T>(initParameters, communicator);\n                });\n        }\n    });\n\n    return delayedConnect;\n};\n\n/**\n * Creates a tunnel for cross tab communication.\n * The resulting iframe should be appended to the html document, and then it can be used as a parameter to [[connect]].\n * @param host Url of the SmartDesign instance. e.g. https://mycompany.com/smartdesign or http://login.smartwe.de/SmartWe/\n * @param readyCallback Callback to execute after the tunnel is established\n */\n// eslint-disable-next-line valid-jsdoc\nexport const createTunnel = (host = \"\", readyCallback: () => void): HTMLIFrameElement => {\n    return createTunnelInternal(host, readyCallback);\n};\n\nexport type StateValueTypes = FieldMetadata | boolean | number | string;\n\nexport interface ICustomState {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [name: string]: StateValueTypes | StateValueTypes[] | Field<any> | IContextItem | IAggregation;\n}\n\nexport const isSingleValueField = <T>(field: Field<T>): field is SingleValueField<T> => {\n    return !Array.isArray(field.value);\n};\n\nexport const isMultiValueField = <T>(field: Field<T>): field is MultiValueField<T> => {\n    return !isStringTreeSuggestField(field) && Array.isArray(field.value);\n};\n\nexport const isStringTreeSuggestField = <T>(field: Field<T>): field is StringTreeSuggestField => {\n    return (field as StringTreeSuggestField).root != null;\n};\n\nexport const isContextItem = (object: unknown): object is IContextItem => {\n    const potentialContextItem = object as IContextItem;\n    const potentialFieldAggregation = object as IFieldAggregation;\n    const potentialScriptedAggregation = object as IScriptedAggregation;\n    return (\n        potentialContextItem &&\n        potentialContextItem.type != null &&\n        potentialContextItem.name != null &&\n        !potentialFieldAggregation.fieldAggregation &&\n        !potentialScriptedAggregation.scriptedAggregation\n    );\n};\n\nexport const isAggregation = (object: unknown): object is IFieldAggregation => {\n    if (isScriptedAggregation(object) || isFieldAggregation(object)) {\n        return true;\n    }\n    return isContextItem(object) && object.type === \"Aggregation\";\n};\n\nexport const isFieldAggregation = (object: unknown): object is IFieldAggregation => {\n    const potentialFieldAggregation = object as IFieldAggregation;\n    return (\n        potentialFieldAggregation &&\n        potentialFieldAggregation.type === \"Aggregation\" &&\n        potentialFieldAggregation.name != null &&\n        potentialFieldAggregation.fieldAggregation\n    );\n};\n\nexport const isScriptedAggregation = (object: unknown): object is IScriptedAggregation => {\n    const potentialScriptedAggregation = object as IScriptedAggregation;\n    return (\n        potentialScriptedAggregation &&\n        potentialScriptedAggregation.type === \"ScriptedAggregation\" &&\n        potentialScriptedAggregation.name != null &&\n        potentialScriptedAggregation.scriptedAggregation\n    );\n};\n\nconst tokensToVariables = (tokens) => {\n    return `:root * {\n    ${Object.keys(tokens)\n        .map((key) => `--${key}: ${tokens[key]};`)\n        .join(\"\\n\")}\n    }`;\n};\n","type OnChangeCallback = (url: string) => void;\n\nexport class UrlChangeTracker {\n    public path: string;\n    public track(onChange: OnChangeCallback): void {\n        if (!history.pushState || !window.addEventListener) {\n            return;\n        }\n        this.path = this.getPath();\n        history.pushState = this.wrapWithHandleUrlChange(history, onChange, history.pushState);\n        history.replaceState = this.wrapWithHandleUrlChange(history, onChange, history.replaceState);\n\n        window.addEventListener(\"hashchange\", () => this.handleUrlChange(onChange, true));\n        window.addEventListener(\"popstate\", () => this.handleUrlChange(onChange, true));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/ban-types\n    private wrapWithHandleUrlChange(object: any, onChange: OnChangeCallback, originalMethod: Function) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (...args: any) => {\n            originalMethod.apply(object, ...args);\n            this.handleUrlChange(onChange, true);\n        };\n    }\n\n    private getPath() {\n        return location.href;\n    }\n    private handleUrlChange(onChange: OnChangeCallback, historyDidUpdate) {\n        setTimeout(() => {\n            const oldPath = this.path;\n            const newPath = this.getPath();\n\n            if (oldPath !== newPath) {\n                this.path = newPath;\n                if (historyDidUpdate) {\n                    onChange(newPath);\n                }\n            }\n        }, 0);\n    }\n}\n\nconst tracker = new UrlChangeTracker();\n\nexport const trackUrlChanges = (onChange: OnChangeCallback): void => {\n    tracker.track(onChange);\n};\n","/**\n * Contains representation specific information about a single command\n */\nexport interface ICommandRepresentation {\n    /**\n     * The id of the command\n     * @type {string}\n     */\n    id: string;\n    /**\n     * A flag which determines whether the command is enabled.\n     * @type {boolean}\n     */\n    enabled: boolean;\n    /**\n     * The qualified name of the icon to be shown.\n     * The icons are loaded from the icons folder (next to the app manifest).\n     * Platform icons can be used with the `platform:` qualifier e.g. `platform:new`;\n     *\n     * @type {string}\n     */\n    icon: string;\n    /**\n     * The label to be shown\n     * @type {string}\n     */\n    label: string;\n    /**\n     * Alternative label in case this command is contributed to a command group\n     * @type {string}\n     */\n    inGroupLabel?: string;\n    /**\n     * The id of the parent group\n     * @type {string}\n     */\n    pointId?: string;\n    /**\n     * The description to be used (as a tooltip)\n     * @type {string}\n     */\n    description: string;\n}\n\nexport const ACTION_MENU_ID = \"actionMenu\";\nexport const VIEW_MENU_ID = \"viewMenu\";\n\n/**\n * Represents a group\n */\nexport interface IGroup extends ICommandRepresentation {\n    group?: true;\n}\n\n/**\n * Contains information about a single command\n */\nexport interface ICommand extends ICommandRepresentation {\n    /**\n     * The callback to be executed\n     */\n    callback: VoidFunction;\n}\n","import { IDisposable } from \"./disposable\";\nimport { IHostAPI } from \"../host/smartdesign_host\";\nimport { ICommand, IGroup } from \"./command\";\nimport { Communicator } from \"./communicator\";\n\nexport class CommandRegistry {\n    private commandRegistry: Map<string, ICommand> = new Map<string, ICommand>();\n\n    constructor(private communicator: Communicator<IHostAPI>) {\n        this.communicator.expose(\n            {\n                invokeCommand: (commandId) => this.invokeCommand(commandId),\n            },\n            \"invokeCommand\"\n        );\n    }\n\n    private invokeCommand(commandId: string) {\n        const command = this.commandRegistry.get(commandId);\n        if (command) {\n            command.callback();\n        }\n    }\n\n    contributeGroup(command: IGroup): IDisposable {\n        return this.contributeCommand({ ...command, group: true });\n    }\n\n    contributeCommand(command: ICommand | IGroup): IDisposable {\n        if (!command.id) {\n            throw new Error(\"Command must be defined with a non-empty, unique id!\");\n        }\n        if (this.commandRegistry.has(command.id)) {\n            throw new Error(`Command is already defined with the id \"${command.id}\"!`);\n        }\n\n        if (this.isCommand(command)) {\n            this.commandRegistry.set(command.id, command);\n        }\n        this.communicator.invoke(\"contributeCommand\", command);\n\n        return {\n            dispose: () => {\n                this.commandRegistry.delete(command.id);\n                this.communicator.invoke(\"revokeCommand\", command.id);\n            },\n        };\n    }\n\n    private isCommand(command: IGroup | ICommand): command is ICommand {\n        return command && !(command as IGroup).group && (command as ICommand).callback != null;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { MessageStatus } from \"./message\";\nimport { SDMessage } from \"./sdmessage\";\nimport { StringKeyOf, ArgumentTypes, ReturnType, Awaited } from \"./type-utils\";\n\nexport class Communicator<REMOTE = any> {\n    constructor(\n        private targetOrigin: string,\n        private target: () => IEndpoint,\n        private source: () => IEndpoint,\n        private defaultTimeout: number = 10000\n    ) {}\n    private parseJSON(data) {\n        try {\n            return JSON.parse(data);\n        } catch (error) {\n            return undefined;\n        }\n    }\n    private unwrapMessage(eventData: unknown): SDMessage {\n        return this.parseJSON(eventData) as SDMessage;\n    }\n\n    private wrapMessage(message: SDMessage) {\n        return JSON.stringify(message);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    public expose(object: any, action: string): () => void {\n        const handler = (args: any) => {\n            return new Promise<any>((resolve, reject) => {\n                try {\n                    resolve(object[action](...args));\n                } catch (error) {\n                    reject(error);\n                }\n            });\n        };\n        const messageHandler = (event: MessageEvent) => {\n            if (event.source !== this.target()) {\n                return;\n            }\n\n            const message: SDMessage = this.unwrapMessage(event.data);\n            if (message) {\n                const args = message.params;\n                if (action === message.action) {\n                    handler(args)\n                        .then((payload) => {\n                            return new SDMessage(action, undefined, undefined, undefined, MessageStatus.OK, payload);\n                        })\n                        .catch((e) => {\n                            console.error(\"Remote method invocation failed.\", e);\n                            return new SDMessage(\n                                action,\n                                undefined,\n                                undefined,\n                                e instanceof Error ? e.message || \"ERROR\" : e,\n                                MessageStatus.ERROR_UNKNOWN,\n                                undefined\n                            );\n                        })\n                        .then((result) => {\n                            result.tag = message.tag;\n                            result.source = message.source;\n                            result.target = message.target;\n                            this.target().postMessage(this.wrapMessage(result), this.targetOrigin);\n                        });\n                }\n            }\n        };\n\n        this.source().addEventListener(\"message\", messageHandler, false);\n        return () => this.source().removeEventListener(\"message\", messageHandler);\n    }\n\n    public invoke<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>,\n        RETURNTYPE extends Awaited<ReturnType<REMOTE[METHOD]>> = Awaited<ReturnType<REMOTE[METHOD]>>\n    >(method: METHOD, ...args: ARGS): Promise<RETURNTYPE> {\n        let timeout = null;\n        const timeoutPromise: Promise<RETURNTYPE> = new Promise<RETURNTYPE>((resolve, reject) => {\n            timeout = setTimeout(() => {\n                reject(new Error(\"Remote method (\" + method + \") invocation failed: Timeout\"));\n            }, this.defaultTimeout);\n        });\n        const relaxed = this.invokeRelaxed(method, ...args);\n        relaxed.then(\n            () => clearTimeout(timeout),\n            () => clearTimeout(timeout)\n        );\n        return Promise.race([timeoutPromise, relaxed]) as Promise<RETURNTYPE>;\n    }\n\n    public invokeRelaxed<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>,\n        RETURNTYPE extends Awaited<ReturnType<REMOTE[METHOD]>> = Awaited<ReturnType<REMOTE[METHOD]>>\n    >(method: METHOD, ...args: ARGS): Promise<RETURNTYPE> {\n        const result = new Promise<RETURNTYPE>((resolve, reject) => {\n            const request = this.postInternal(method, ...args);\n            const handler = (event: MessageEvent) => {\n                if (event.source !== this.target()) {\n                    return;\n                }\n                const response: SDMessage = this.unwrapMessage(event.data);\n                if (response) {\n                    if (request.tag !== response.tag) {\n                        return;\n                    }\n                    this.source().removeEventListener(\"message\", handler);\n\n                    if (response.status !== MessageStatus.OK || response.error) {\n                        reject(new Error(response.error || response.payload));\n                    } else {\n                        resolve(response.payload);\n                    }\n                }\n            };\n            this.source().addEventListener(\"message\", handler, false);\n        });\n        return result;\n    }\n\n    private postInternal<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>\n    >(method: METHOD, ...args: ARGS): SDMessage {\n        const request = new SDMessage(method, args, undefined, undefined, undefined, undefined);\n        this.target().postMessage(this.wrapMessage(request), this.targetOrigin);\n        return request;\n    }\n\n    public post<\n        METHOD extends StringKeyOf<REMOTE> = any,\n        ARGS extends ArgumentTypes<REMOTE[METHOD]> = ArgumentTypes<REMOTE[METHOD]>\n    >(method: METHOD, ...args: ARGS): void {\n        this.postInternal(method, ...args);\n    }\n}\n\nexport interface IEndpoint {\n    postMessage(message: any, targetOrigin: string, transfer?: any[]): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions\n    ): void;\n}\n","/* eslint-disable camelcase */\nexport const DialogButtonId_OK = \"OK\";\nexport const DialogButtonId_YES = \"YES\";\nexport const DialogButtonId_NO = \"NO\";\nexport const DialogButtonId_CANCEL = \"CANCEL\";\n\nexport const DialogButtonPreset_OK = \"OK\";\nexport const DialogButtonPreset_OK_CANCEL = \"OK_CANCEL\";\nexport const DialogButtonPreset_YES_NO = \"YES_NO\";\nexport const DialogButtonPreset_YES_NO_CANCEL = \"YES_NO_CANCEL\";\n\nexport const DialogStyle_INFO = \"INFO\";\nexport const DialogStyle_WARNING = \"WARNING\";\nexport const DialogStyle_ERROR = \"ERROR\";\n/* eslint-enable camelcase */\n\nexport type DialogButtonId = \"OK\" | \"YES\" | \"NO\" | \"CANCEL\" | (string & { x?: never });\n\nexport type DialogButtonPreset = \"OK\" | \"OK_CANCEL\" | \"YES_NO\" | \"YES_NO_CANCEL\";\n\nexport type DialogStyle = \"INFO\" | \"WARNING\" | \"ERROR\";\n\nexport interface IDialogButtonDefinition {\n    /**\n     * The ID that is used to identify the pressed button when processing the result.\n     *\n     * Note that it's not displayed to the user (in case the caption is present).\n     */\n    id: DialogButtonId;\n    /**\n     * The caption that will be shown to the user on the UI.\n     *\n     * Note that for default buttons (buttons with ID \"OK\", \"YES\", \"NO\" or \"CANCEL\") this\n     * is automatically set with a translated value if absent.\n     */\n    caption?: string;\n    /**\n     * Indicates whether the button defines the primary action and should be visualized differenly.\n     */\n    primary?: boolean;\n}\n\nexport interface IDialogOptions {\n    /**\n     * The title for the dialog window.\n     */\n    title: string;\n    /**\n     * The message that will be shown in the main area of the dialog window.\n     */\n    message: string;\n    /**\n     * The buttons that will be shown for user interaction.\n     *\n     * It can be a preset (\"OK\" | \"OK_CANCEL\" | \"YES_NO\" | \"YES_NO_CANCEL\") or a list of\n     * DialogButtonDefinition that allows custom buttons to be shown.\n     */\n    buttons?: DialogButtonPreset | IDialogButtonDefinition[];\n    /**\n     * Defines the style of the dialog that usually shows the user how severe the shown information is.\n     */\n    style?: DialogStyle;\n}\n\nexport interface IDialogResult {\n    /**\n     * The ID of the button that was pressed.\n     */\n    buttonId: DialogButtonId;\n\n    /**\n     * Returns true if OK or YES was pressed\n     */\n    wasConfirmed(): boolean;\n}\n","/* eslint-disable camelcase */\nimport {\n    IDialogButtonDefinition,\n    DialogButtonId,\n    DialogButtonId_CANCEL,\n    DialogButtonId_NO,\n    DialogButtonId_OK,\n    DialogButtonId_YES,\n    DialogButtonPreset_OK,\n    DialogButtonPreset_OK_CANCEL,\n    DialogButtonPreset_YES_NO,\n    DialogButtonPreset_YES_NO_CANCEL,\n    IDialogOptions,\n    IDialogResult,\n    DialogStyle_INFO,\n} from \"./dialog\";\n\nconst defaultOptions: IDialogOptions = {\n    title: null,\n    message: null,\n    buttons: DialogButtonPreset_OK,\n    style: DialogStyle_INFO,\n};\n\nexport interface IOpenDialogResponse {\n    /**\n     * The ID of the button that was pressed.\n     */\n    buttonId: DialogButtonId;\n}\n\nexport class DialogResultImpl implements IDialogResult {\n    public buttonId: DialogButtonId;\n\n    constructor(response: IOpenDialogResponse) {\n        this.buttonId = response.buttonId;\n    }\n\n    /**\n     * @return {boolean} true if OK or YES was pressed\n     */\n    public wasConfirmed(): boolean {\n        return this.buttonId === DialogButtonId_OK || this.buttonId === DialogButtonId_YES;\n    }\n}\n\nexport const getEffectiveOptions = (options: IDialogOptions): IDialogOptions => {\n    const effectiveOptions: IDialogOptions = { ...defaultOptions };\n    Object.keys(options || {})\n        .filter((key) => options[key] !== undefined)\n        .forEach((key) => (effectiveOptions[key] = options[key]));\n\n    if (!(effectiveOptions.buttons instanceof Array)) {\n        const buttonPreset = effectiveOptions.buttons || DialogButtonPreset_OK;\n        const effectiveButtons: IDialogButtonDefinition[] = [];\n\n        if (buttonPreset === DialogButtonPreset_OK || buttonPreset === DialogButtonPreset_OK_CANCEL) {\n            effectiveButtons.push({\n                id: DialogButtonId_OK,\n                caption: null,\n                primary: buttonPreset === DialogButtonPreset_OK,\n            });\n        }\n\n        if (buttonPreset === DialogButtonPreset_YES_NO || buttonPreset === DialogButtonPreset_YES_NO_CANCEL) {\n            effectiveButtons.push({ id: DialogButtonId_YES, caption: null });\n            effectiveButtons.push({\n                id: DialogButtonId_NO,\n                caption: null,\n                primary: buttonPreset === DialogButtonPreset_YES_NO,\n            });\n        }\n\n        if (buttonPreset === DialogButtonPreset_YES_NO_CANCEL || buttonPreset === DialogButtonPreset_OK_CANCEL) {\n            effectiveButtons.push({ id: DialogButtonId_CANCEL, caption: null, primary: true });\n        }\n\n        effectiveOptions.buttons = effectiveButtons;\n    }\n\n    effectiveOptions.buttons.forEach((button) => {\n        button.caption = button.caption || null;\n        button.id = button.id || null;\n        button.primary = button.primary || false;\n    });\n\n    return effectiveOptions;\n};\n","export const getMethods = (obj) => {\n    let props: string[] = [];\n    const isConstructor = (e) => \"constructor\" === e;\n    const isFunction = (e) => typeof obj[e] === \"function\";\n    const isNormalFunction = (e) => !isConstructor(e) && isFunction(e);\n\n    while ((obj = Object.getPrototypeOf(obj)) && obj !== Object.prototype) {\n        const allProps = Object.getOwnPropertyNames(obj);\n        const functions = allProps.filter((e) => isNormalFunction(e));\n        props = props.concat(functions);\n    }\n\n    return props.sort().filter((e, i, arr) => {\n        return e !== arr[i + 1];\n    });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* istanbul ignore file */\n\n/**\n * Base interface defining messaging contract.\n *\n * TODO: create contract validator\n */\nexport interface IMessageBase {\n    /**\n     * Auto-generated identifier used for message identification and as a correlation ID for request-response pairs.\n     */\n    tag: string;\n\n    /**\n     * Name of message subject (typically pub/sub topic or RPC method name)\n     */\n    action: string;\n\n    /**\n     * Optional parameter section, is typically populated in RPCs requests/responses.\n     */\n    params?: { [paramName: string]: any };\n\n    /**\n     * Payload (if any) of the message.\n     */\n    payload?: any;\n\n    /**\n     * Message metadata.\n     */\n    meta: IMeta;\n    error?: any;\n    status?: MessageStatus;\n}\n\nexport interface IMeta {\n    /**\n     * DEPRECATED.\n     * Set SDX message tiers. Will be replaced by message routing in v3.\n     */\n    tier: Tier;\n\n    /**\n     * Float version number for API contract versioning:\n     * - 1.0: SDX Messaging v1 (up to SDX Native Frames)\n     * - 2.0: SDX Messaging v2 (up to SDX versions <= 3.x.x)\n     * - 3.0: CAS Integration Library (from SDX v3, SDX SDK v3)\n     */\n    apiVersion: number;\n\n    /**\n     * Timestamp of message generation (UNIX-time with millis).\n     */\n    timestamp: number;\n\n    /**\n     * Emitter can classify message as a cacheable message for subscribers.\n     */\n    cache?: boolean;\n\n    /**\n     * Indicates a message is coming from a cache or is about a cached resource.\n     */\n    cached?: boolean;\n\n    /**\n     * A message with supplied patterns should invalidate other messages with matching action names.\n     * Array of string arrays defining patterns for action names joined by '*'\n     */\n    invalidates?: string[][];\n\n    /**\n     * WebSocket connection ID used by SDX Server.\n     */\n    connectionId?: string;\n\n    /**\n     * Timeout in milliseconds\n     */\n    timeout?: number;\n\n    [key: string]: any;\n}\n\n/**\n * DEPRECATED: set SDX message tiers. Will be replaced by message routing in v3.\n */\nexport enum Tier {\n    INTERAPP,\n    CONTAINER,\n    BROADCAST,\n}\n\n/**\n * Status values in MessageBase\n */\nexport enum MessageStatus {\n    /**\n     * No errors, code of success.\n     */\n    OK = 0,\n\n    /**\n     * Message targeted a party that was not ready, or action against an uninitialized party.\n     */\n    NOT_INITIALIZED = 1,\n\n    /**\n     * Authorization error.\n     */\n    NOT_AUTHORIZED = 2,\n\n    /**\n     * Action got invalidated (eg. object instance from cache, session, etc.)\n     */\n    INVALIDATED = 3,\n\n    /**\n     * Message targeted a party that is not available (eg. API proxy response for unavailable backend)\n     */\n    ERROR_NOT_AVAILABLE = 248,\n\n    /**\n     * Messaging (integration) host error\n     */\n    ERROR_HOST = 249,\n\n    /**\n     * No response from any party for the same message tag in given timeout (see Meta).\n     */\n    ERROR_TIMEOUT = 250,\n\n    /**\n     * Message is not applicable with given parameters. Typically used in RPC responses.\n     */\n    ERROR_INVALID_PARAMS = 251,\n\n    /**\n     * Message targeting RPC method does not exist. Typically used in RPC responses.\n     */\n    ERROR_NO_SUCH_METHOD = 252,\n\n    /**\n     * Internal error in service behind given action name.\n     */\n    ERROR_SERVICE = 253,\n\n    /**\n     * Message format and/or payload parse error.\n     */\n    ERROR_PARSE = 254,\n\n    /**\n     * Unknown error occurred during message exchange. See error property for details, if any.\n     */\n    ERROR_UNKNOWN = 255,\n}\n\nexport abstract class Message implements IMessageBase {\n    public tag: string;\n\n    constructor(\n        public action: string,\n        public params: any = {},\n        public meta: IMeta,\n        public error?: string,\n        public status?: number,\n        public payload: any = {}\n    ) {\n        this.tag = this.UUID();\n\n        this.meta = {\n            apiVersion: 2.0,\n            tier: Tier.INTERAPP,\n            timestamp: new Date().getTime(),\n        };\n    }\n\n    public setTier(tier: Tier) {\n        if (tier) {\n            this.meta.tier = tier;\n        }\n    }\n\n    private UUID(): string {\n        if (typeof window.crypto !== \"undefined\" && typeof window.crypto.getRandomValues !== \"undefined\") {\n            // If we have a cryptographically secure PRNG, use that\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n            const buf = new Uint16Array(8);\n            window.crypto.getRandomValues(buf);\n            const S4 = (num: any) => {\n                let ret = num.toString(16);\n                while (ret.length < 4) {\n                    ret = \"0\" + ret;\n                }\n                return ret;\n            };\n            return (\n                S4(buf[0]) +\n                S4(buf[1]) +\n                \"-\" +\n                S4(buf[2]) +\n                \"-\" +\n                S4(buf[3]) +\n                \"-\" +\n                S4(buf[4]) +\n                \"-\" +\n                S4(buf[5]) +\n                S4(buf[6]) +\n                S4(buf[7])\n            );\n        } else {\n            const s4 = () => {\n                return Math.floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            };\n            return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n        }\n    }\n}\n","/**\n * The back navigation mode determines how the navigation stack is threated.\n *\n * NONE\n * The host can navigate back without navigating back inside\n * the web app. This is the default.\n *\n * LINEAR\n * The visited urls are stored in a stack, upon back navigation in the host,\n * the web app url is restored to the previous value.\n *\n * COMPRESSED\n * Similar to the LINEAR mode, with the exception that if a url is visited\n * again, the navigation history of the web app is dropped until that point.\n */\nexport type BackNavigationMode = \"NONE\" | \"LINEAR\" | \"COMPRESSED\";\n\n/**\n * Additional parameters for the navigation.\n */\nexport interface INavigationOptions {\n    /**\n     * Whether the new page(s) openned on a new tab or not\n     * @type {boolean}\n     */\n    newTab: boolean;\n}\n\nexport interface IRecordNavigationOptions extends INavigationOptions {\n    /**\n     * Whether the edit mode should be opened or not.\n     * @type {boolean}\n     */\n    editMode: boolean;\n}\n\nexport interface INavigationSelection {\n    gguids: string[];\n    selectedGuid: string;\n}\n\nexport interface INavigator {\n    navigate(intent: string, options?: INavigationOptions): Promise<void>;\n    navigateWithRecord(\n        objectType: string,\n        gguid: string,\n        intent?: string,\n        options?: IRecordNavigationOptions\n    ): Promise<void>;\n    navigateWithRecords(\n        objectType: string,\n        selection: INavigationSelection,\n        intent?: string,\n        options?: INavigationOptions\n    ): Promise<void>;\n    navigateToDossier(\n        source: ISingleSelection,\n        selection?: ISingleSelection,\n        intent?: string,\n        navigateToDossier?: string[],\n        options?: INavigationOptions\n    ): Promise<void>;\n}\n\nexport interface ISingleSelection {\n    objectType: string;\n    gguid: string;\n}\n\n/**\n * Navigation builder for navigating without context.\n */\nexport interface INavigationBuilder {\n    /**\n     * Trigger the navigation with the configured parameters.\n     * @return {Promise<void>}\n     */\n    navigate(): Promise<void>;\n\n    /**\n     * Set the navigation intent.\n     * @param {String} intentName\n     * @return {this}\n     */\n    withIntent(intentName: string): this;\n\n    /**\n     * Whether the new page(s) should be opened on a new tab or not. Note that opening on new tab is only supported for\n     * read mode navigations.\n     * @param {boolean} defaults to true\n     * @return {this}\n     */\n    openOnNewTab(newTab?: boolean): this;\n\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = void, TResult2 = never>(\n        onfulfilled?: ((value: void) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n    ): Promise<TResult1 | TResult2>;\n\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n    ): Promise<void | TResult>;\n}\n\n/**\n * Navigation builder for navigating with data obejct.\n */\nexport interface INavigationWithRecordBuilder extends INavigationBuilder {\n    /**\n     * Sets the type of the data object.\n     * @param {String} objectType\n     * @return {this}\n     */\n    withObjectType(objectType: string): this;\n\n    /**\n     * Sets the id (gguid) of the data object\n     * @param {String} gguid\n     * @return {this}\n     */\n    withGguid(gguid: string): this;\n\n    /**\n     * Indicates that the navigation should open the edit mode.\n     * @return {this}\n     */\n    openEditMode(): this;\n}\n\n/**\n * Navigation builder for navigating with a list of data obejcts.\n */\nexport interface INavigationWithRecordsBuilder extends INavigationBuilder {\n    /**\n     * Sets the type of the data objects.\n     * @param {String} objectType\n     * @return {this}\n     */\n    withObjectType(objectType: string): this;\n    /**\n     * Sets the id (gguid) of the selected data object. Selected id should be\n     * presented in the gguids list, see {@link withGguid}.\n     * @param {String} selectedGguid\n     * @return {this}\n     */\n    withSelectedGguid(selectedGguid: string): this;\n    /**\n     * Sets the list of the data objects ids.\n     * @param {string[]} gguids\n     * @return {this}\n     */\n    withGguids(gguids: string[]): this;\n}\n\n/**\n * Navigation builder for dossier navigation\n */\nexport interface INavigationWithDossierBuilder extends INavigationBuilder {\n    /**\n     * Sets of the object type of the source item.\n     * @param {String} sourceObjectType\n     * @return {this}\n     */\n    withSourceObjectType(sourceObjectType: string): this;\n\n    /**\n     * Sets the gguid of the source item.\n     * @param {String} sourceGguid\n     * @return {this}\n     */\n    withSourceGguid(sourceGguid: string): this;\n\n    /**\n     * Sets of the object type of the selected item.\n     * @param {String} selectedObjectType\n     * @return {this}\n     */\n    withSelectedObjectType(selectedObjectType: string): this;\n\n    /**\n     * Sets the selected data object guid, that should be member of the dossier items\n     * @param {String} selectedGguid\n     * @return {this}\n     */\n    withSelectedGguid(selectedGguid: string): this;\n\n    /**\n     * Sets the typesToShow list, which defines the available object types.\n     * If it is empty the server configuration is used.\n     * @param {String[]} typesToShow\n     * @return {this}\n     */\n    withTypeToShow(typesToShow: string[]): this;\n}\n\nexport class NavigationBuilder implements INavigationBuilder {\n    protected _intentName: string;\n    protected _newTab = false;\n    private _navigation: Promise<void>;\n\n    constructor(protected navigator: INavigator) {}\n\n    public navigate(): Promise<void> {\n        if (this._navigation) {\n            return this._navigation;\n        }\n\n        this._navigation = this.invokeNavigation();\n        return this._navigation;\n    }\n\n    public withIntent(intentName: string): this {\n        this._intentName = intentName;\n        return this;\n    }\n\n    public openOnNewTab(newTab = true): this {\n        this._newTab = newTab;\n        return this;\n    }\n\n    protected invokeNavigation(): Promise<void> {\n        const options: INavigationOptions = {\n            newTab: this._newTab,\n        };\n        return this.navigator.navigate(this._intentName, options);\n    }\n\n    public then<TResult1 = void, TResult2 = never>(\n        onfulfilled?: ((value: void) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n    ): Promise<TResult1 | TResult2> {\n        return this.navigate().then(onfulfilled, onrejected);\n    }\n    public catch<TResult = never>(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onrejected?: (reason: any) => TResult | PromiseLike<TResult>\n    ): Promise<void | TResult> {\n        return this.navigate().then(null, onrejected);\n    }\n}\n\nexport class NavigationWithRecordBuilder extends NavigationBuilder implements INavigationWithRecordBuilder {\n    protected _objectType: string;\n    protected _gguid: string;\n    protected _editMode = false;\n\n    public openEditMode(editMode = true): this {\n        this._editMode = editMode;\n        return this;\n    }\n\n    public withObjectType(objectType: string): this {\n        this._objectType = objectType;\n        return this;\n    }\n\n    public withGguid(gguid: string): this {\n        this._gguid = gguid;\n        return this;\n    }\n\n    protected invokeNavigation(): Promise<void> {\n        const options: IRecordNavigationOptions = {\n            newTab: this._newTab,\n            editMode: this._editMode,\n        };\n        return this.navigator.navigateWithRecord(this._objectType, this._gguid, this._intentName, options);\n    }\n}\n\nexport class NavigationWithRecordsBuilder extends NavigationBuilder implements INavigationWithRecordsBuilder {\n    protected _objectType: string;\n    protected _selectedGguid: string;\n    protected _gguids: string[];\n\n    public withObjectType(objectType: string): this {\n        this._objectType = objectType;\n        return this;\n    }\n\n    public withSelectedGguid(selectedGguid: string): this {\n        this._selectedGguid = selectedGguid;\n        return this;\n    }\n\n    public withGguids(gguids: string[]): this {\n        this._gguids = gguids;\n        return this;\n    }\n\n    protected invokeNavigation(): Promise<void> {\n        const options: INavigationOptions = {\n            newTab: this._newTab,\n        };\n        const selection: INavigationSelection = {\n            selectedGuid: this._selectedGguid ? this._selectedGguid : null,\n            gguids: this._gguids,\n        };\n        return this.navigator.navigateWithRecords(this._objectType, selection, this._intentName, options);\n    }\n}\n\nexport class NavigationWithDossierBuilder extends NavigationBuilder implements INavigationWithDossierBuilder {\n    protected _sourceObjectType: string;\n    protected _sourceGguid: string;\n    protected _selectedObjectType: string;\n    protected _selectedGguid: string;\n    protected _typesToShow: string[];\n\n    public withSourceObjectType(sourceObjectType: string): this {\n        this._sourceObjectType = sourceObjectType;\n        return this;\n    }\n\n    public withSourceGguid(sourceGguid: string): this {\n        this._sourceGguid = sourceGguid;\n        return this;\n    }\n\n    public withSelectedObjectType(selectedObjectType: string): this {\n        this._selectedObjectType = selectedObjectType;\n        return this;\n    }\n\n    public withSelectedGguid(selectedGguid: string): this {\n        this._selectedGguid = selectedGguid;\n        return this;\n    }\n\n    public withTypeToShow(typesToShow: string[]): this {\n        this._typesToShow = typesToShow;\n        return this;\n    }\n\n    protected invokeNavigation(): Promise<void> {\n        const options: INavigationOptions = {\n            newTab: this._newTab,\n        };\n        const source: ISingleSelection = {\n            gguid: this._sourceGguid,\n            objectType: this._sourceObjectType,\n        };\n        let selection: ISingleSelection;\n        if (this._selectedGguid && this._selectedObjectType) {\n            selection = {\n                gguid: this._selectedGguid,\n                objectType: this._selectedObjectType,\n            };\n        }\n        return this.navigator.navigateToDossier(source, selection, this._intentName, this._typesToShow, options);\n    }\n}\n","/**\n * Contains information about a single menu item\n */\nexport interface IMenuItem {\n    /**\n     * The id of the menu item\n     * @type {string}\n     */\n    id: string;\n    /**\n     * A flag which determines whether the menu item is enabled.\n     * @type {boolean}\n     */\n    enabled: boolean;\n    /**\n     * The qualified name of the icon to be shown.\n     * The icons are loaded from the icons folder (next to the app manifest).\n     * Platform icons can be used with the `platform:` qualifier e.g. `platform:new`;\n     *\n     * @type {string}\n     */\n    icon: string;\n    /**\n     * The caption to be shown\n     * @type {string}\n     */\n    caption: string;\n    /**\n     * The description to be used (as a tooltip)\n     * @type {string}\n     */\n    description: string;\n}\n\n/**\n * The category a radial menu item belongs to\n */\nexport type RadialMenuCategory = \"standard\" | \"communication\" | \"creation\" | \"information\";\n\n/**\n * Contains information about a single radial menu item\n */\nexport interface IRadialMenuItem extends IMenuItem {\n    /**\n     * The category to be used for the slice\n     */\n    category: RadialMenuCategory;\n}\n\n/**\n * Contains information about a single flyout menu item\n */\nexport type IFlyoutMenuItem = IMenuItem | IMenuItemSeparator;\n\n/**\n * Represents a horizontal separator between list items\n */\nexport interface IMenuItemSeparator {\n    separator: true;\n}\n\n/**\n * Constant for easier separator usage\n */\nexport const MenuItemSeparator: IMenuItemSeparator = {\n    separator: true,\n};\n\n/**\n * Contains representation related options for the radial menu\n */\nexport interface RadialMenuOptions {\n    centerIcon: string;\n    centerColor: string;\n}\n\n/**\n * Represents a position relative to the client window, can usually be retrieved from standard event properties, e.g. event.clientX, event.clientY\n */\nexport interface Coordinate {\n    x: number;\n    y: number;\n}\n\n/**\n * Represents an area within to the client window, can usually be retrieved by calling getBoundingClientRect()\n */\nexport interface Area {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n","import type { SmartDesign as Host } from \"../host/smartdesign_host\";\nimport { Communicator } from \"./communicator\";\nimport {\n    GroupResult,\n    IAggregationContextItemBase,\n    IAggregation,\n    IFieldAggregation,\n    IScriptedAggregation,\n    IContextItem,\n    IDataObjectContextItem,\n    IDataObjectContextItemMetadata,\n    IMassDataObjectContextItem,\n    IDependentDataObjectsContextItem,\n    IMassDataResponse,\n    FieldsFor,\n    IMassDataObjectContextItemMetadata,\n    IDependentDataObjectsContextItemMetadata,\n    ScriptedGroupedAggregationResult,\n    ScriptedUngroupedAggregationResult,\n    ScriptedAggregationRawValueTypes,\n    IGroupedAggregation,\n    IUngroupedAggregation,\n} from \"./context\";\nimport { IDisposable } from \"./disposable\";\nimport { Field, FieldMetadata } from \"./field\";\nimport { StringKeyOf } from \"./type-utils\";\n\nexport type FieldChangeListener<VALUE> = (field: Field<VALUE>) => void;\n\nfunction ensureArray<T>(value: T[] | undefined): T[] {\n    return value || [];\n}\n\nexport class ContextItemChangeNotifier {\n    private contextItemToListeners: Record<string, VoidFunction[]> = {};\n    constructor(private communicator: Communicator<Host.IAPI>) {\n        this.communicator.expose(this, \"onContextItemInvalidate\");\n    }\n\n    onContextItemInvalidate(contextItemName: string): void {\n        this.contextItemToListeners[contextItemName] = ensureArray(this.contextItemToListeners[contextItemName]);\n        this.contextItemToListeners[contextItemName].forEach((p) => p());\n    }\n\n    registerInvalidateInterest(contextItemName: string, listener: VoidFunction): IDisposable {\n        this.contextItemToListeners[contextItemName] = ensureArray(this.contextItemToListeners[contextItemName]);\n        if (this.contextItemToListeners[contextItemName].length == 0) {\n            this.communicator.invokeRelaxed(\"registerContextItemInvalidateInterest\", contextItemName);\n        }\n        this.contextItemToListeners[contextItemName].push(listener);\n        return {\n            dispose: () => {\n                this.contextItemToListeners[contextItemName] = ensureArray(\n                    this.contextItemToListeners[contextItemName]\n                );\n                this.contextItemToListeners[contextItemName] = this.contextItemToListeners[contextItemName].filter(\n                    (p) => p != listener\n                );\n                if (this.contextItemToListeners[contextItemName].length == 0) {\n                    this.communicator.invokeRelaxed(\"unregisterContextItemInvalidateInterest\", contextItemName);\n                }\n            },\n        };\n    }\n}\n\nexport class FieldValueChangeNotifier {\n    private aliasToListeners: Record<string, FieldChangeListener<unknown>[]> = {};\n    constructor(private communicator: Communicator<Host.IAPI>) {\n        this.communicator.expose(this, \"onFieldChange\");\n    }\n\n    onFieldChange(contextItemName: string, fieldName: string, field: Field<unknown>): void {\n        const alias = this.getAlias(contextItemName, fieldName);\n        this.aliasToListeners[alias] = ensureArray(this.aliasToListeners[alias]);\n        this.aliasToListeners[alias].forEach((p) => p(field));\n    }\n\n    private getAlias(contextItemName: string, fieldName: string): string {\n        return `${contextItemName}.${fieldName}`;\n    }\n\n    registerFieldInterest<T, FIELD extends StringKeyOf<T>>(\n        contextItemName: string,\n        fieldName: FIELD,\n        listener: FieldChangeListener<T[FIELD]>\n    ): IDisposable {\n        const alias = this.getAlias(contextItemName, fieldName);\n\n        this.aliasToListeners[alias] = ensureArray(this.aliasToListeners[alias]);\n        if (this.aliasToListeners[alias].length == 0) {\n            this.communicator.invokeRelaxed(\"registerFieldInterest\", contextItemName, fieldName);\n        }\n        this.aliasToListeners[alias].push(listener);\n        return {\n            dispose: () => {\n                this.aliasToListeners[alias] = ensureArray(this.aliasToListeners[alias]);\n                this.aliasToListeners[alias] = this.aliasToListeners[alias].filter((p) => p != listener);\n                if (this.aliasToListeners[alias].length == 0) {\n                    this.communicator.invokeRelaxed(\"unregisterFieldInterest\", contextItemName, fieldName);\n                }\n            },\n        };\n    }\n}\n\nexport type IRuntimeContextItem = IContextItem &\n    (\n        | RuntimeDataObjectContextItem<unknown>\n        | RuntimeMassDataObjectContextItem<unknown>\n        | RuntimeDependentDataObjectsContextItem<unknown>\n        | RuntimeUngroupedAggregation\n        | RuntimeGroupedAggregation\n    );\nexport type IRuntimeAggregation = IAggregation &\n    (RuntimeUngroupedAggregation | RuntimeGroupedAggregation | RuntimeFieldAggregation | RuntimeScriptedAggregation);\n\nexport class RuntimeDataObjectContextItem<T> implements IDataObjectContextItem<T> {\n    readonly type: \"DataObject\";\n    readonly objectTypeName: string;\n    readonly id: string;\n    readonly name: string;\n\n    constructor(\n        contextItem: IDataObjectContextItemMetadata,\n        private contextItemChangeNotifier: ContextItemChangeNotifier,\n        private fieldValueChangeNotifier: FieldValueChangeNotifier,\n        private communicator: Communicator<Host.IAPI>\n    ) {\n        Object.assign(this, contextItem);\n    }\n\n    getMetadata(): Promise<Record<StringKeyOf<T>, FieldMetadata>> {\n        return this.communicator.invokeRelaxed(\"getMetadata\", this.objectTypeName);\n    }\n\n    onInvalidate(listener: VoidFunction): IDisposable {\n        return this.contextItemChangeNotifier.registerInvalidateInterest(this.name, listener);\n    }\n\n    bindField<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(\n        fieldName: FIELD,\n        listener: FieldChangeListener<T[FIELD]>\n    ): IDisposable {\n        this.getField(fieldName).then((field) => listener(field));\n        return this.fieldValueChangeNotifier.registerFieldInterest<T, FIELD>(this.name, fieldName, (field) =>\n            listener(field)\n        );\n    }\n    getField<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(fieldName: FIELD): Promise<Field<T[FIELD]>> {\n        return this.communicator.invokeRelaxed(\"getField\", this.name, fieldName);\n    }\n\n    getFields<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(...fields: FIELD[]): Promise<FieldsFor<Pick<T, FIELD>>> {\n        return this.communicator.invokeRelaxed(\"getFields\", this.name, ...fields);\n    }\n\n    updateField?<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(field: Field<T[FIELD]>): Promise<void> {\n        return this.communicator.invokeRelaxed(\"updateField\", this.name, field);\n    }\n\n    updateFields?(fields: Partial<FieldsFor<T>>): Promise<void> {\n        return this.communicator.invokeRelaxed(\"updateFields\", this.name, fields);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RuntimeDependentDataObjectsContextItem<T = any> implements IDependentDataObjectsContextItem<T> {\n    readonly type: \"DependentDataObjects\";\n    readonly objectTypeName: string;\n    readonly name: string;\n\n    constructor(\n        contextItem: IDependentDataObjectsContextItemMetadata,\n        private contextItemChangeNotifier: ContextItemChangeNotifier,\n        private communicator: Communicator<Host.IAPI>\n    ) {\n        Object.assign(this, contextItem);\n    }\n\n    getMetadata(): Promise<Record<StringKeyOf<T>, FieldMetadata>> {\n        return this.communicator.invokeRelaxed(\"getMetadata\", this.objectTypeName);\n    }\n\n    onInvalidate(listener: VoidFunction): IDisposable {\n        return this.contextItemChangeNotifier.registerInvalidateInterest(this.name, listener);\n    }\n\n    load<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(\n        fieldNames: FIELD[]\n    ): Promise<IMassDataResponse<Pick<T, FIELD>>> {\n        return this.communicator.invokeRelaxed(\"dependentDataObjectsOperationLoad\", this.name, fieldNames);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RuntimeMassDataObjectContextItem<T = any> implements IMassDataObjectContextItem<T> {\n    readonly type: \"MassData\";\n    readonly objectTypeName: string;\n    readonly name: string;\n\n    constructor(\n        contextItem: IMassDataObjectContextItemMetadata,\n        private contextItemChangeNotifier: ContextItemChangeNotifier,\n        private communicator: Communicator<Host.IAPI>\n    ) {\n        Object.assign(this, contextItem);\n    }\n\n    getMetadata(): Promise<Record<StringKeyOf<T>, FieldMetadata>> {\n        return this.communicator.invokeRelaxed(\"getMetadata\", this.objectTypeName);\n    }\n\n    onInvalidate(listener: VoidFunction): IDisposable {\n        return this.contextItemChangeNotifier.registerInvalidateInterest(this.name, listener);\n    }\n\n    load<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(\n        fieldNames: FIELD[],\n        from: number,\n        pageSize: number,\n        where?: string\n    ): Promise<IMassDataResponse<Pick<T, FIELD>>> {\n        return this.communicator.invokeRelaxed(\"massDataOperationLoad\", this.name, fieldNames, from, pageSize, where);\n    }\n    count(): Promise<number> {\n        return this.communicator.invokeRelaxed(\"massDataOperationCount\", this.name);\n    }\n    sum<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(field: FIELD): Promise<number | string | undefined> {\n        return this.communicator.invokeRelaxed(\"massDataOperationSum\", this.name, field);\n    }\n    min<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(field: FIELD): Promise<number | string | undefined> {\n        return this.communicator.invokeRelaxed(\"massDataOperationMin\", this.name, field);\n    }\n    max<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(field: FIELD): Promise<number | string | undefined> {\n        return this.communicator.invokeRelaxed(\"massDataOperationMax\", this.name, field);\n    }\n    average<FIELD extends StringKeyOf<T> = StringKeyOf<T>>(field: FIELD): Promise<number | string | undefined> {\n        return this.communicator.invokeRelaxed(\"massDataOperationAverage\", this.name, field);\n    }\n}\n\nabstract class RuntimeAggregation implements IAggregationContextItemBase {\n    readonly type: \"Aggregation\";\n    readonly name: string;\n    grouped: boolean;\n\n    constructor(\n        contextItem: IGroupedAggregation | IUngroupedAggregation,\n        private contextItemChangeNotifier: ContextItemChangeNotifier,\n        protected communicator: Communicator<Host.IAPI>\n    ) {\n        Object.assign(this, contextItem);\n    }\n\n    onInvalidate(listener: VoidFunction): IDisposable {\n        return this.contextItemChangeNotifier.registerInvalidateInterest(this.name, listener);\n    }\n}\n\nexport class RuntimeUngroupedAggregation extends RuntimeAggregation implements IUngroupedAggregation {\n    readonly grouped: false;\n    get<VALUE>(): Promise<VALUE> {\n        return this.communicator.invokeRelaxed(\"aggregationOperationGet\", this.name);\n    }\n}\n\nexport class RuntimeGroupedAggregation extends RuntimeAggregation implements IGroupedAggregation {\n    readonly grouped: true;\n    get<GROUP, VALUE>(): Promise<GroupResult<GROUP, VALUE>[]> {\n        return this.communicator.invokeRelaxed(\"aggregationOperationGet\", this.name);\n    }\n}\n\nexport class RuntimeFieldAggregation extends RuntimeAggregation implements IFieldAggregation {\n    readonly grouped: false;\n    readonly fieldAggregation: true;\n\n    get<VALUE>(): Promise<VALUE> {\n        return this.communicator.invokeRelaxed(\"aggregationOperationGet\", this.name);\n    }\n    getMetadata(): Promise<FieldMetadata> {\n        return this.communicator.invokeRelaxed(\"fieldAggregationGetMetadata\", this.name);\n    }\n}\n\nexport class RuntimeScriptedAggregation implements IScriptedAggregation {\n    readonly type: \"ScriptedAggregation\";\n    readonly name: string;\n    readonly scriptedAggregation: true;\n\n    constructor(\n        contextItem: IScriptedAggregation,\n        private contextItemChangeNotifier: ContextItemChangeNotifier,\n        protected communicator: Communicator<Host.IAPI>\n    ) {\n        Object.assign(this, contextItem);\n    }\n\n    onInvalidate(listener: VoidFunction): IDisposable {\n        return this.contextItemChangeNotifier.registerInvalidateInterest(this.name, listener);\n    }\n\n    get<VALUE extends ScriptedAggregationRawValueTypes>(): Promise<\n        ScriptedGroupedAggregationResult<VALUE> | ScriptedUngroupedAggregationResult<VALUE>\n    > {\n        return this.communicator.invokeRelaxed(\"scriptedAggregationGet\", this.name);\n    }\n}\n","import type { SmartDesign as Host } from \"../host/smartdesign_host\";\nimport { Communicator } from \"./communicator\";\nimport { AppSettings, AppSettingsScope, AppSettingsSetMode } from \"./settings\";\nimport { StringKeyOf } from \"./type-utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class AppSettingsImpl<T extends Record<string, unknown> = any> implements AppSettings<T> {\n    constructor(\n        private communicator: Communicator<Host.IAPI>,\n        private scope: AppSettingsScope,\n        private appId: string\n    ) {}\n    getAll(): Promise<Partial<T>> {\n        return this.communicator.invokeRelaxed(\"getAllAppSettings\", this.appId, this.scope);\n    }\n    setAll(values: Partial<T>, mode: AppSettingsSetMode = \"EXTEND\"): Promise<void> {\n        return this.communicator.invokeRelaxed(\"setAllAppSettings\", this.appId, this.scope, mode, values);\n    }\n    get<PROPERTY extends StringKeyOf<T> = StringKeyOf<T>>(propertyName: PROPERTY): Promise<T[PROPERTY]> {\n        return this.communicator.invokeRelaxed(\"getAppSettings\", this.appId, this.scope, propertyName);\n    }\n    set<PROPERTY extends StringKeyOf<T> = StringKeyOf<T>>(propertyName: PROPERTY, value: T[PROPERTY]): Promise<void> {\n        const settings: T = {} as T;\n        settings[propertyName] = value;\n        return this.communicator.invokeRelaxed(\"setAllAppSettings\", this.appId, this.scope, \"EXTEND\", settings);\n    }\n    delete(propertyName: StringKeyOf<T>): Promise<void> {\n        return this.communicator.invokeRelaxed(\"deleteAppSettings\", this.appId, this.scope, propertyName);\n    }\n}\n","import { Message } from \"./message\";\n\nexport class SDMessage extends Message {\n    public source: string;\n    public target: string;\n}\n","export const createTunnel = (host = \"\", readyCallback: () => void): HTMLIFrameElement => {\n    const tunnel = document.createElement(\"iframe\");\n    tunnel.tabIndex = -1;\n    tunnel.style.width = \"0\";\n    tunnel.style.height = \"0\";\n    tunnel.style.margin = \"0\";\n    tunnel.style.padding = \"0\";\n    tunnel.style.border = \"none\";\n    tunnel.style.position = \"absolute\";\n    tunnel.style.zIndex = \"-1\";\n    tunnel.style.pointerEvents = \"none\";\n    if (host.lastIndexOf(\"/\") === host.length - 1) {\n        host = host.substring(0, host.length - 1);\n    }\n    tunnel.setAttribute(\"src\", host + \"/apps/content/api/tunnel.html\");\n    window.addEventListener(\"message\", (e) => {\n        if (e.data === \"ready\" && readyCallback) {\n            readyCallback();\n        }\n    });\n    return tunnel;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(519);\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_exports__","global","globalThis","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","isConsumed","byteOffset","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","cache","reParamSearch","replace","Date","getTime","form","trim","split","bytes","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","substr","line","parts","key","responseURL","responseText","setTimeout","ontimeout","onabort","open","href","fixUrl","withCredentials","responseType","_typeof","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","communicator_1","require","smartdesign_url_change_1","tunnel_1","navigation_1","functionUtil_1","__exportStar","dialog_1","dialogutils_1","runtimeContext_1","design_tokens_1","command_1","commandregistry_1","runtimeSettings_1","Navigator","communicator","navigate","intent","invokeRelaxed","navigateWithRecord","objectType","gguid","navigateWithRecords","selection","navigateToDossier","source","NavigationImpl","initParameters","_navigationScheduler","actor","_intents","intents","_reloadSupported","reloadSupported","_supportedNavigationModes","backNavigationModes","_navigator","defineProperty","isBackwardNavigationModeSupported","setBackwardNavigationMode","invoke","args","_i","arguments","navigationBuilder","NavigationBuilder","withIntent","triggerNavigation","NavigationWithRecordBuilder","withObjectType","withGguid","gguids","NavigationWithRecordsBuilder","withGguids","withSelectedGguid","NavigationWithDossierBuilder","withSourceGguid","withSourceObjectType","reload","navigateBack","navigateHome","urlChanged","SearchImpl","_openSearchSupported","openSearchSupported","openSearch","query","_this","isSearchPending","p","catch","SettingsImpl","initparameters","appSettingsSupported","getAppSettings","scope","appId","AppSettingsImpl","DialogApiImpl","_openSupported","openDialogSupported","alert","title","style","confirm","buttons","DialogButtonPreset_YES_NO","openSupported","getEffectiveOptions","DialogResultImpl","StateImpl","contextItemEnhancer","_callbacks","_updateSupported","stateUpdateSupported","_onChangeSupported","stateOnChangeSupported","_current","enhanceWithAPIMethods","state","expose","setState","fireStateChange","onChange","dispose","filter","update","updateSupported","prop","isContextItem","isFieldAggregation","isScriptedAggregation","initial","onChangeSupported","ActivationChangeHandlerImpl","handler","onActivationChanged","ActivationServiceImpl","registerListener","api","disposables","getMethods","disposable","InputDeviceImpl","initParemeters","devicesSupported","getDevice","concat","ContextImpl","fieldValueChangeNotifier","contextItemChangeNotifier","dataObjectContextItem","enhanceContextItemWithAPIMethods","primaryDataObject","primaryMassData","primaryDataObjectAccessorSupported","primaryMassDataAccessorSupported","contextItem","RuntimeDataObjectContextItem","RuntimeMassDataObjectContextItem","RuntimeDependentDataObjectsContextItem","RuntimeScriptedAggregation","RuntimeFieldAggregation","grouped","RuntimeGroupedAggregation","RuntimeUngroupedAggregation","getPrimaryDataObject","getPrimaryMassData","CommandServiceImpl","pointIds","actionMenu","ACTION_MENU_ID","viewMenu","VIEW_MENU_ID","_commandRegistry","CommandRegistry","commandsSupported","contributeGroup","command","contributeCommand","OverlayImpl","flyoutMenuSupported","radialMenuSupported","openFlyoutMenu","positionOrArea","lastActiveElement","document","activeElement","focus","openRadialMenu","radialMenuOptions","position","LoadingIndicatorImpl","show","hide","showDuring","loadingIndicatorShowSupported","loadingIndicatorBlockSupported","loadingIndicatorBlockHostSupported","SmartDesignAPIImpl","_fieldValueChangeNotifier","FieldValueChangeNotifier","_contextItemChangeNotifier","ContextItemChangeNotifier","Navigation","Search","Settings","Dialog","ActivationService","InputDevice","context","Context","State","item","Overlay","LoadingIndicator","Command","locale","__assign","restEnabled","inheritDesignTokens","applyAsCssVariables","tokens","default","designTokens","cssVariables","tokensToVariables","styles","createElement","innerText","head","appendChild","provideCaption","caption","baseUrl","addMissingHeader","token","trackUrlChanges","requestResize","width","height","defaultValue","targetOrigin","target","timeout","window","origin","SD_DIRECT","initApp","loop_1","SD_DIRECT_API","requestAnimationFrame","directApi","waitForLoad","sourceProvider","communicator_2","Communicator","parent","sourceWindow","origin_1","host","readyCallback","createTunnel","field","isStringTreeSuggestField","object","potentialContextItem","potentialFieldAggregation","potentialScriptedAggregation","fieldAggregation","scriptedAggregation","UrlChangeTracker","track","history","pushState","path","getPath","wrapWithHandleUrlChange","replaceState","handleUrlChange","originalMethod","apply","__spreadArray","__read","historyDidUpdate","oldPath","newPath","tracker","commandRegistry","Map","invokeCommand","commandId","group","id","isCommand","delete","message_1","sdmessage_1","defaultTimeout","parseJSON","data","unwrapMessage","eventData","wrapMessage","stringify","action","messageHandler","event","params","payload","SDMessage","MessageStatus","OK","console","ERROR_UNKNOWN","tag","postMessage","timeoutPromise","relaxed","clearTimeout","race","postInternal","post","defaultOptions","DialogButtonPreset_OK","DialogStyle_INFO","buttonId","wasConfirmed","DialogButtonId_OK","DialogButtonId_YES","effectiveOptions","buttonPreset","effectiveButtons","DialogButtonPreset_OK_CANCEL","primary","DialogButtonPreset_YES_NO_CANCEL","DialogButtonId_NO","DialogButtonId_CANCEL","button","props","isNormalFunction","isConstructor","isFunction","getPrototypeOf","functions","sort","arr","Tier","Message","meta","UUID","apiVersion","tier","INTERAPP","timestamp","setTier","crypto","getRandomValues","Uint16Array","S4","num","ret","s4","Math","floor","random","substring","navigator","_newTab","_navigation","invokeNavigation","intentName","_intentName","openOnNewTab","newTab","onfulfilled","onrejected","_super","_editMode","__extends","openEditMode","editMode","_objectType","_gguid","selectedGguid","_selectedGguid","_gguids","selectedGuid","sourceObjectType","_sourceObjectType","sourceGguid","_sourceGguid","withSelectedObjectType","selectedObjectType","_selectedObjectType","withTypeToShow","typesToShow","_typesToShow","separator","ensureArray","contextItemToListeners","onContextItemInvalidate","contextItemName","registerInvalidateInterest","listener","aliasToListeners","onFieldChange","fieldName","alias","getAlias","registerFieldInterest","assign","getMetadata","objectTypeName","onInvalidate","bindField","getField","getFields","fields","_a","updateField","updateFields","load","fieldNames","from","pageSize","where","count","sum","min","max","average","RuntimeAggregation","getAll","setAll","propertyName","settings","tunnel","tabIndex","margin","padding","border","zIndex","pointerEvents","lastIndexOf","setAttribute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","enumerable","r","toStringTag"],"sourceRoot":""}